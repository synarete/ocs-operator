---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |2-

      [
          {
              "apiVersion": "ocs.openshift.io/v1",
              "kind": "StorageCluster",
              "metadata": {
                  "name": "example-storagecluster",
                  "namespace": "openshift-storage"
              },
              "spec": {
                  "manageNodes": false,
                  "monPVCTemplate": {
                      "spec": {
                          "accessModes": [
                              "ReadWriteOnce"
                          ],
                          "resources": {
                              "requests": {
                                  "storage": "10Gi"
                              }
                          },
                          "storageClassName": "gp2"
                      }
                  },
                  "storageDeviceSets": [
                      {
                          "count": 3,
                          "dataPVCTemplate": {
                              "spec": {
                                  "accessModes": [
                                      "ReadWriteOnce"
                                  ],
                                  "resources": {
                                      "requests": {
                                          "storage": "1Ti"
                                      }
                                  },
                                  "storageClassName": "gp2",
                                  "volumeMode": "Block"
                              }
                          },
                          "name": "example-deviceset",
                          "placement": {},
                          "portable": true,
                          "resources": {}
                      }
                  ]
              }
          }
      ]
    capabilities: Deep Insights
    categories: Storage
    containerImage: quay.io/ocs-dev/ocs-operator:4.9.0
    description: Red Hat OpenShift Container Storage provides hyperconverged storage for applications within an OpenShift cluster.
    external.features.ocs.openshift.io/export-script: |-
      JycnCkNvcHlyaWdodCAyMDIwIFRoZSBSb29rIEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQu
      CgpMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxp
      Y2Vuc2UiKTsKeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3
      aXRoIHRoZSBMaWNlbnNlLgpZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQK
      CglodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKClVubGVzcyByZXF1
      aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUK
      ZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElT
      IiBCQVNJUywKV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVp
      dGhlciBleHByZXNzIG9yIGltcGxpZWQuClNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmlj
      IGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKbGltaXRhdGlvbnMgdW5kZXIgdGhl
      IExpY2Vuc2UuCicnJwoKaW1wb3J0IGVycm5vCmltcG9ydCBzeXMKaW1wb3J0IGpzb24KaW1wb3J0
      IGFyZ3BhcnNlCmltcG9ydCB1bml0dGVzdAppbXBvcnQgcmUKaW1wb3J0IHJlcXVlc3RzCmltcG9y
      dCBzdWJwcm9jZXNzCmZyb20gb3MgaW1wb3J0IGxpbmVzZXAgYXMgTElORVNFUApmcm9tIG9zIGlt
      cG9ydCBwYXRoCgojIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgd2l0aCAyLngKdHJ5OgogICAgTW9k
      dWxlTm90Rm91bmRFcnJvcgpleGNlcHQ6CiAgICBNb2R1bGVOb3RGb3VuZEVycm9yID0gSW1wb3J0
      RXJyb3IKCnRyeToKICAgIGltcG9ydCByYWRvcwpleGNlcHQgTW9kdWxlTm90Rm91bmRFcnJvciBh
      cyBub01vZEVycjoKICAgIHByaW50KCJFcnJvcjogJXNcbkV4aXRpbmcgdGhlIHNjcmlwdC4uLiIg
      JSBub01vZEVycikKICAgIHN5cy5leGl0KDEpCgp0cnk6CiAgICAjIGZvciAyLjcueAogICAgZnJv
      bSBTdHJpbmdJTyBpbXBvcnQgU3RyaW5nSU8KZXhjZXB0IE1vZHVsZU5vdEZvdW5kRXJyb3I6CiAg
      ICAjIGZvciAzLngKICAgIGZyb20gaW8gaW1wb3J0IFN0cmluZ0lPCgp0cnk6CiAgICAjIGZvciAy
      LjcueAogICAgZnJvbSB1cmxwYXJzZSBpbXBvcnQgdXJscGFyc2UKZXhjZXB0IE1vZHVsZU5vdEZv
      dW5kRXJyb3I6CiAgICAjIGZvciAzLngKICAgIGZyb20gdXJsbGliLnBhcnNlIGltcG9ydCB1cmxw
      YXJzZQoKCmNsYXNzIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oRXhjZXB0aW9uKToKICAgIHBh
      c3MKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMj
      IyMjIyMjIyMjIyMjIyMgRHVtbXlSYWRvcyAjIyMjIyMjIyMjIyMjIyMjIyMKIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgdGhpcyBpcyBtYWlubHkgZm9y
      IHRlc3RpbmcgYW5kIGNvdWxkIGJlIHVzZWQgd2hlcmUgJ3JhZG9zJyBpcyBub3QgYXZhaWxhYmxl
      CgoKY2xhc3MgRHVtbXlSYWRvcyhvYmplY3QpOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAg
      ICAgIHNlbGYucmV0dXJuX3ZhbCA9IDAKICAgICAgICBzZWxmLmVycl9tZXNzYWdlID0gJycKICAg
      ICAgICBzZWxmLnN0YXRlID0gJ2Nvbm5lY3RlZCcKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFw
      ID0ge30KICAgICAgICBzZWxmLmNtZF9uYW1lcyA9IHt9CiAgICAgICAgc2VsZi5faW5pdF9jbWRf
      b3V0cHV0X21hcCgpCiAgICAgICAgc2VsZi5kdW1teV9ob3N0X2lwX21hcCA9IHt9CgogICAgZGVm
      IF9pbml0X2NtZF9vdXRwdXRfbWFwKHNlbGYpOgogICAgICAgIGpzb25fZmlsZV9uYW1lID0gJ3Rl
      c3QtZGF0YS9jZXBoLXN0YXR1cy1vdXQnCiAgICAgICAgc2NyaXB0X2RpciA9IHBhdGguYWJzcGF0
      aChwYXRoLmRpcm5hbWUoX19maWxlX18pKQogICAgICAgIGNlcGhfc3RhdHVzX3N0ciA9ICIiCiAg
      ICAgICAgd2l0aCBvcGVuKHBhdGguam9pbihzY3JpcHRfZGlyLCBqc29uX2ZpbGVfbmFtZSksICdy
      JykgYXMganNvbl9maWxlOgogICAgICAgICAgICBjZXBoX3N0YXR1c19zdHIgPSBqc29uX2ZpbGUu
      cmVhZCgpCiAgICAgICAgc2VsZi5jbWRfbmFtZXNbJ2ZzIGxzJ10gPSAnJyd7ImZvcm1hdCI6ICJq
      c29uIiwgInByZWZpeCI6ICJmcyBscyJ9JycnCiAgICAgICAgc2VsZi5jbWRfbmFtZXNbJ3F1b3J1
      bV9zdGF0dXMnXSA9ICcnJ3siZm9ybWF0IjogImpzb24iLCAicHJlZml4IjogInF1b3J1bV9zdGF0
      dXMifScnJwogICAgICAgIHNlbGYuY21kX25hbWVzWydjYXBzX2NoYW5nZV9kZWZhdWx0X3Bvb2xf
      cHJlZml4J10gPSAnJyd7ImNhcHMiOiBbIm1vbiIsICJhbGxvdyByLCBhbGxvdyBjb21tYW5kIHF1
      b3J1bV9zdGF0dXMsIGFsbG93IGNvbW1hbmQgdmVyc2lvbiIsICJtZ3IiLCAiYWxsb3cgY29tbWFu
      ZCBjb25maWciLCAib3NkIiwgImFsbG93IHJ3eCBwb29sPWRlZmF1bHQucmd3Lm1ldGEsIGFsbG93
      IHIgcG9vbD0ucmd3LnJvb3QsIGFsbG93IHJ3IHBvb2w9ZGVmYXVsdC5yZ3cuY29udHJvbCwgYWxs
      b3cgcnggcG9vbD1kZWZhdWx0LnJndy5sb2csIGFsbG93IHggcG9vbD1kZWZhdWx0LnJndy5idWNr
      ZXRzLmluZGV4Il0sICJlbnRpdHkiOiAiY2xpZW50LmhlYWx0aGNoZWNrZXIiLCAiZm9ybWF0Ijog
      Impzb24iLCAicHJlZml4IjogImF1dGggY2FwcyJ9JycnCiAgICAgICAgIyBhbGwgdGhlIGNvbW1h
      bmRzIGFuZCB0aGVpciBvdXRwdXQKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwW3NlbGYuY21k
      X25hbWVzWydmcyBscyddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdID0gJycnW3sibmFt
      ZSI6Im15ZnMiLCJtZXRhZGF0YV9wb29sIjoibXlmcy1tZXRhZGF0YSIsIm1ldGFkYXRhX3Bvb2xf
      aWQiOjIsImRhdGFfcG9vbF9pZHMiOlszXSwiZGF0YV9wb29scyI6WyJteWZzLWRhdGEwIl19XScn
      JwogICAgICAgIHNlbGYuY21kX291dHB1dF9tYXBbc2VsZi5jbWRfbmFtZXNbJ3F1b3J1bV9zdGF0
      dXMnXV0gPSAnJyd7ImVsZWN0aW9uX2Vwb2NoIjozLCJxdW9ydW0iOlswXSwicXVvcnVtX25hbWVz
      IjpbImEiXSwicXVvcnVtX2xlYWRlcl9uYW1lIjoiYSIsInF1b3J1bV9hZ2UiOjE0Mzg1LCJmZWF0
      dXJlcyI6eyJxdW9ydW1fY29uIjoiNDU0MDEzODI5MjgzNjY5NjA2MyIsInF1b3J1bV9tb24iOlsi
      a3Jha2VuIiwibHVtaW5vdXMiLCJtaW1pYyIsIm9zZG1hcC1wcnVuZSIsIm5hdXRpbHVzIiwib2N0
      b3B1cyJdfSwibW9ubWFwIjp7ImVwb2NoIjoxLCJmc2lkIjoiYWY0ZTE2NzMtMGI3Mi00MDJkLTk5
      MGEtMjJkMjkxOWQwZjFjIiwibW9kaWZpZWQiOiIyMDIwLTA1LTA3VDAzOjM2OjM5LjkxODAzNVoi
      LCJjcmVhdGVkIjoiMjAyMC0wNS0wN1QwMzozNjozOS45MTgwMzVaIiwibWluX21vbl9yZWxlYXNl
      IjoxNSwibWluX21vbl9yZWxlYXNlX25hbWUiOiJvY3RvcHVzIiwiZmVhdHVyZXMiOnsicGVyc2lz
      dGVudCI6WyJrcmFrZW4iLCJsdW1pbm91cyIsIm1pbWljIiwib3NkbWFwLXBydW5lIiwibmF1dGls
      dXMiLCJvY3RvcHVzIl0sIm9wdGlvbmFsIjpbXX0sIm1vbnMiOlt7InJhbmsiOjAsIm5hbWUiOiJh
      IiwicHVibGljX2FkZHJzIjp7ImFkZHJ2ZWMiOlt7InR5cGUiOiJ2MiIsImFkZHIiOiIxMC4xMTAu
      MjA1LjE3NDozMzAwIiwibm9uY2UiOjB9LHsidHlwZSI6InYxIiwiYWRkciI6IjEwLjExMC4yMDUu
      MTc0OjY3ODkiLCJub25jZSI6MH1dfSwiYWRkciI6IjEwLjExMC4yMDUuMTc0OjY3ODkvMCIsInB1
      YmxpY19hZGRyIjoiMTAuMTEwLjIwNS4xNzQ6Njc4OS8wIiwicHJpb3JpdHkiOjAsIndlaWdodCI6
      MH1dfX0nJycKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwg
      ImFsbG93IHIsIGFsbG93IGNvbW1hbmQgcXVvcnVtX3N0YXR1cyIsICJvc2QiLCAiYWxsb3cgcnd4
      IHBvb2w9ZGVmYXVsdC5yZ3cubWV0YSwgYWxsb3cgciBwb29sPS5yZ3cucm9vdCwgYWxsb3cgcncg
      cG9vbD1kZWZhdWx0LnJndy5jb250cm9sLCBhbGxvdyB4IHBvb2w9ZGVmYXVsdC5yZ3cuYnVja2V0
      cy5pbmRleCJdLCAiZW50aXR5IjogImNsaWVudC5oZWFsdGhjaGVja2VyIiwgImZvcm1hdCI6ICJq
      c29uIiwgInByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUifScnJ10gPSAnJydbeyJlbnRpdHki
      OiJjbGllbnQuaGVhbHRoY2hlY2tlciIsImtleSI6IkFRREZrYk5lZnQ1YkZSQUFUbmRMTlVTRUty
      dW96eGlaaTNscmRBPT0iLCJjYXBzIjp7Im1vbiI6ImFsbG93IHIsIGFsbG93IGNvbW1hbmQgcXVv
      cnVtX3N0YXR1cyIsIm9zZCI6ImFsbG93IHJ3eCBwb29sPWRlZmF1bHQucmd3Lm1ldGEsIGFsbG93
      IHIgcG9vbD0ucmd3LnJvb3QsIGFsbG93IHJ3IHBvb2w9ZGVmYXVsdC5yZ3cuY29udHJvbCwgYWxs
      b3cgeCBwb29sPWRlZmF1bHQucmd3LmJ1Y2tldHMuaW5kZXgifX1dJycnCiAgICAgICAgc2VsZi5j
      bWRfb3V0cHV0X21hcFsnJyd7ImNhcHMiOiBbIm1vbiIsICJwcm9maWxlIHJiZCIsICJvc2QiLCAi
      cHJvZmlsZSByYmQiXSwgImVudGl0eSI6ICJjbGllbnQuY3NpLXJiZC1ub2RlIiwgImZvcm1hdCI6
      ICJqc29uIiwgInByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUifScnJ10gPSAnJydbeyJlbnRp
      dHkiOiJjbGllbnQuY3NpLXJiZC1ub2RlIiwia2V5IjoiQVFCT2dyTmVIYksxQXhBQXViWUJlVjhT
      MVUvR1B6cTVTVmVxNmc9PSIsImNhcHMiOnsibW9uIjoicHJvZmlsZSByYmQiLCJvc2QiOiJwcm9m
      aWxlIHJiZCJ9fV0nJycKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsi
      bW9uIiwgInByb2ZpbGUgcmJkIiwgIm1nciIsICJhbGxvdyBydyIsICJvc2QiLCAicHJvZmlsZSBy
      YmQiXSwgImVudGl0eSI6ICJjbGllbnQuY3NpLXJiZC1wcm92aXNpb25lciIsICJmb3JtYXQiOiAi
      anNvbiIsICJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3JlYXRlIn0nJyddID0gJycnW3siZW50aXR5
      IjoiY2xpZW50LmNzaS1yYmQtcHJvdmlzaW9uZXIiLCJrZXkiOiJBUUJOZ3JOZTFnZXlLeEFBOGVr
      VmlSZEUraHNzNU93ZVlCa3dOZz09IiwiY2FwcyI6eyJtZ3IiOiJhbGxvdyBydyIsIm1vbiI6InBy
      b2ZpbGUgcmJkIiwib3NkIjoicHJvZmlsZSByYmQifX1dJycnCiAgICAgICAgc2VsZi5jbWRfb3V0
      cHV0X21hcFsnJyd7ImNhcHMiOiBbIm1vbiIsICJhbGxvdyByIiwgIm1nciIsICJhbGxvdyBydyIs
      ICJvc2QiLCAiYWxsb3cgcncgdGFnIGNlcGhmcyAqPSoiLCAibWRzIiwgImFsbG93IHJ3Il0sICJl
      bnRpdHkiOiAiY2xpZW50LmNzaS1jZXBoZnMtbm9kZSIsICJmb3JtYXQiOiAianNvbiIsICJwcmVm
      aXgiOiAiYXV0aCBnZXQtb3ItY3JlYXRlIn0nJyddID0gJycnW3siZW50aXR5IjoiY2xpZW50LmNz
      aS1jZXBoZnMtbm9kZSIsImtleSI6IkFRQk9nck5lRU51bkt4QUFQQ21nRTdSNkc4RGNYbmFKMUYz
      MnFnPT0iLCJjYXBzIjp7Im1kcyI6ImFsbG93IHJ3IiwibWdyIjoiYWxsb3cgcnciLCJtb24iOiJh
      bGxvdyByIiwib3NkIjoiYWxsb3cgcncgdGFnIGNlcGhmcyAqPSoifX1dJycnCiAgICAgICAgc2Vs
      Zi5jbWRfb3V0cHV0X21hcFsnJyd7ImNhcHMiOiBbIm1vbiIsICJhbGxvdyByIiwgIm1nciIsICJh
      bGxvdyBydyIsICJvc2QiLCAiYWxsb3cgcncgdGFnIGNlcGhmcyBtZXRhZGF0YT0qIl0sICJlbnRp
      dHkiOiAiY2xpZW50LmNzaS1jZXBoZnMtcHJvdmlzaW9uZXIiLCAiZm9ybWF0IjogImpzb24iLCAi
      cHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0ZSJ9JycnXSA9ICcnJ1t7ImVudGl0eSI6ImNsaWVu
      dC5jc2ktY2VwaGZzLXByb3Zpc2lvbmVyIiwia2V5IjoiQVFCT2dyTmVBRmdjR0JBQXZHcUtPQUQw
      RDN4eG1WWTBSOTEyZGc9PSIsImNhcHMiOnsibWdyIjoiYWxsb3cgcnciLCJtb24iOiJhbGxvdyBy
      Iiwib3NkIjoiYWxsb3cgcncgdGFnIGNlcGhmcyBtZXRhZGF0YT0qIn19XScnJwogICAgICAgIHNl
      bGYuY21kX291dHB1dF9tYXBbJycneyJjYXBzIjogWyJtb24iLCAiYWxsb3cgciwgYWxsb3cgY29t
      bWFuZCBxdW9ydW1fc3RhdHVzLCBhbGxvdyBjb21tYW5kIHZlcnNpb24iLCAibWdyIiwgImFsbG93
      IGNvbW1hbmQgY29uZmlnIiwgIm9zZCIsICJhbGxvdyByd3ggcG9vbD1kZWZhdWx0LnJndy5tZXRh
      LCBhbGxvdyByIHBvb2w9LnJndy5yb290LCBhbGxvdyBydyBwb29sPWRlZmF1bHQucmd3LmNvbnRy
      b2wsIGFsbG93IHJ4IHBvb2w9ZGVmYXVsdC5yZ3cubG9nLCBhbGxvdyB4IHBvb2w9ZGVmYXVsdC5y
      Z3cuYnVja2V0cy5pbmRleCJdLCAiZW50aXR5IjogImNsaWVudC5oZWFsdGhjaGVja2VyIiwgImZv
      cm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUifScnJ10gPSAnJydb
      eyJlbnRpdHkiOiJjbGllbnQuaGVhbHRoY2hlY2tlciIsImtleSI6IkFRREZrYk5lZnQ1YkZSQUFU
      bmRMTlVTRUtydW96eGlaaTNscmRBPT0iLCJjYXBzIjp7Im1vbiI6ICJhbGxvdyByLCBhbGxvdyBj
      b21tYW5kIHF1b3J1bV9zdGF0dXMsIGFsbG93IGNvbW1hbmQgdmVyc2lvbiIsICJtZ3IiOiAiYWxs
      b3cgY29tbWFuZCBjb25maWciLCAib3NkIjogImFsbG93IHJ3eCBwb29sPWRlZmF1bHQucmd3Lm1l
      dGEsIGFsbG93IHIgcG9vbD0ucmd3LnJvb3QsIGFsbG93IHJ3IHBvb2w9ZGVmYXVsdC5yZ3cuY29u
      dHJvbCwgYWxsb3cgcnggcG9vbD1kZWZhdWx0LnJndy5sb2csIGFsbG93IHggcG9vbD1kZWZhdWx0
      LnJndy5idWNrZXRzLmluZGV4In19XScnJwogICAgICAgIHNlbGYuY21kX291dHB1dF9tYXBbJycn
      eyJmb3JtYXQiOiAianNvbiIsICJwcmVmaXgiOiAibWdyIHNlcnZpY2VzIn0nJyddID0gJycneyJk
      YXNoYm9hcmQiOiAiaHR0cDovL3Jvb2stY2VwaC1tZ3ItYS01N2NmOWY4NGJjLWY0am5sOjcwMDAv
      IiwgInByb21ldGhldXMiOiAiaHR0cDovL3Jvb2stY2VwaC1tZ3ItYS01N2NmOWY4NGJjLWY0am5s
      OjkyODMvIn0nJycKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siZW50aXR5IjogImNs
      aWVudC5oZWFsdGhjaGVja2VyIiwgImZvcm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJhdXRoIGdl
      dCJ9JycnXSA9ICcnJ3siZGFzaGJvYXJkIjogImh0dHA6Ly9yb29rLWNlcGgtbWdyLWEtNTdjZjlm
      ODRiYy1mNGpubDo3MDAwLyIsICJwcm9tZXRoZXVzIjogImh0dHA6Ly9yb29rLWNlcGgtbWdyLWEt
      NTdjZjlmODRiYy1mNGpubDo5MjgzLyJ9JycnCiAgICAgICAgc2VsZi5jbWRfb3V0cHV0X21hcFsn
      Jyd7ImVudGl0eSI6ICJjbGllbnQuaGVhbHRoY2hlY2tlciIsICJmb3JtYXQiOiAianNvbiIsICJw
      cmVmaXgiOiAiYXV0aCBnZXQifScnJ10gPSAnJydbeyJlbnRpdHkiOiJjbGllbnQuaGVhbHRoY2hl
      Y2tlciIsImtleSI6IkFRREZrYk5lZnQ1YkZSQUFUbmRMTlVTRUtydW96eGlaaTNscmRBPT0iLCJj
      YXBzIjp7Im1vbiI6ICJhbGxvdyByLCBhbGxvdyBjb21tYW5kIHF1b3J1bV9zdGF0dXMsIGFsbG93
      IGNvbW1hbmQgdmVyc2lvbiIsICJtZ3IiOiAiYWxsb3cgY29tbWFuZCBjb25maWciLCAib3NkIjog
      ImFsbG93IHJ3eCBwb29sPWRlZmF1bHQucmd3Lm1ldGEsIGFsbG93IHIgcG9vbD0ucmd3LnJvb3Qs
      IGFsbG93IHJ3IHBvb2w9ZGVmYXVsdC5yZ3cuY29udHJvbCwgYWxsb3cgcnggcG9vbD1kZWZhdWx0
      LnJndy5sb2csIGFsbG93IHggcG9vbD1kZWZhdWx0LnJndy5idWNrZXRzLmluZGV4In19XScnJwog
      ICAgICAgIHNlbGYuY21kX291dHB1dF9tYXBbc2VsZi5jbWRfbmFtZXNbJ2NhcHNfY2hhbmdlX2Rl
      ZmF1bHRfcG9vbF9wcmVmaXgnXV0gPSAnJydbe31dJycnCiAgICAgICAgc2VsZi5jbWRfb3V0cHV0
      X21hcFsneyJmb3JtYXQiOiAianNvbiIsICJwcmVmaXgiOiAic3RhdHVzIn0nXSA9IGNlcGhfc3Rh
      dHVzX3N0cgoKICAgIGRlZiBzaHV0ZG93bihzZWxmKToKICAgICAgICBwYXNzCgogICAgZGVmIGdl
      dF9mc2lkKHNlbGYpOgogICAgICAgIHJldHVybiAnYWY0ZTE2NzMtMGI3Mi00MDJkLTk5MGEtMjJk
      MjkxOWQwZjFjJwoKICAgIGRlZiBjb25mX3JlYWRfZmlsZShzZWxmKToKICAgICAgICBwYXNzCgog
      ICAgZGVmIGNvbm5lY3Qoc2VsZik6CiAgICAgICAgcGFzcwoKICAgIGRlZiBwb29sX2V4aXN0cyhz
      ZWxmLCBwb29sX25hbWUpOgogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIG1vbl9jb21tYW5k
      KHNlbGYsIGNtZCwgb3V0KToKICAgICAgICBqc29uX2NtZCA9IGpzb24ubG9hZHMoY21kKQogICAg
      ICAgIGpzb25fY21kX3N0ciA9IGpzb24uZHVtcHMoanNvbl9jbWQsIHNvcnRfa2V5cz1UcnVlKQog
      ICAgICAgIGNtZF9vdXRwdXQgPSBzZWxmLmNtZF9vdXRwdXRfbWFwW2pzb25fY21kX3N0cl0KICAg
      ICAgICByZXR1cm4gc2VsZi5yZXR1cm5fdmFsLCBcCiAgICAgICAgICAgIGNtZF9vdXRwdXQsIFwK
      ICAgICAgICAgICAgInt9Ii5mb3JtYXQoc2VsZi5lcnJfbWVzc2FnZSkuZW5jb2RlKCd1dGYtOCcp
      CgogICAgZGVmIF9jb252ZXJ0X2hvc3RuYW1lX3RvX2lwKHNlbGYsIGhvc3RfbmFtZSk6CiAgICAg
      ICAgaXBfcmVnX3ggPSByZS5jb21waWxlKHInXGR7MSwzfS5cZHsxLDN9LlxkezEsM30uXGR7MSwz
      fScpCiAgICAgICAgIyBpZiBwcm92aWRlZCBob3N0IGlzIGRpcmVjdGx5IGFuIElQIGFkZHJlc3Ms
      IHJldHVybiB0aGUgc2FtZQogICAgICAgIGlmIGlwX3JlZ194Lm1hdGNoKGhvc3RfbmFtZSk6CiAg
      ICAgICAgICAgIHJldHVybiBob3N0X25hbWUKICAgICAgICBpbXBvcnQgcmFuZG9tCiAgICAgICAg
      aG9zdF9pcCA9IHNlbGYuZHVtbXlfaG9zdF9pcF9tYXAuZ2V0KGhvc3RfbmFtZSwgIiIpCiAgICAg
      ICAgaWYgbm90IGhvc3RfaXA6CiAgICAgICAgICAgIGhvc3RfaXAgPSAiMTcyLjkue30ue30iLmZv
      cm1hdCgKICAgICAgICAgICAgICAgIHJhbmRvbS5yYW5kaW50KDAsIDI1NCksIHJhbmRvbS5yYW5k
      aW50KDAsIDI1NCkpCiAgICAgICAgICAgIHNlbGYuZHVtbXlfaG9zdF9pcF9tYXBbaG9zdF9uYW1l
      XSA9IGhvc3RfaXAKICAgICAgICBkZWwgcmFuZG9tCiAgICAgICAgcmV0dXJuIGhvc3RfaXAKCiAg
      ICBAY2xhc3NtZXRob2QKICAgIGRlZiBSYWRvcyhjb25mZmlsZT1Ob25lKToKICAgICAgICByZXR1
      cm4gRHVtbXlSYWRvcygpCgoKY2xhc3MgUmFkb3NKU09OOgogICAgRVhURVJOQUxfVVNFUl9OQU1F
      ID0gImNsaWVudC5oZWFsdGhjaGVja2VyIgogICAgRVhURVJOQUxfUkdXX0FETUlOX09QU19VU0VS
      X05BTUUgPSAicmd3LWFkbWluLW9wcy11c2VyIgogICAgRU1QVFlfT1VUUFVUX0xJU1QgPSAiRW1w
      dHkgb3V0cHV0IGxpc3QiCiAgICBERUZBVUxUX1JHV19QT09MX1BSRUZJWCA9ICJkZWZhdWx0Igog
      ICAgREVGQVVMVF9NT05JVE9SSU5HX0VORFBPSU5UX1BPUlQgPSAiOTI4MyIKCiAgICBAY2xhc3Nt
      ZXRob2QKICAgIGRlZiBnZW5fYXJnX3BhcnNlcihjbHMsIGFyZ3NfdG9fcGFyc2U9Tm9uZSk6CiAg
      ICAgICAgYXJnUCA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKCkKCiAgICAgICAgY29tbW9uX2dy
      b3VwID0gYXJnUC5hZGRfYXJndW1lbnRfZ3JvdXAoJ2NvbW1vbicpCiAgICAgICAgY29tbW9uX2dy
      b3VwLmFkZF9hcmd1bWVudCgiLS12ZXJib3NlIiwgIi12IiwKICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgIGFjdGlvbj0nc3RvcmVfdHJ1ZScsIGRlZmF1bHQ9RmFsc2UpCiAgICAgICAg
      Y29tbW9uX2dyb3VwLmFkZF9hcmd1bWVudCgiLS1jZXBoLWNvbmYiLCAiLWMiLAogICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iUHJvdmlkZSBhIGNlcGggY29uZiBmaWxlLiIs
      IHR5cGU9c3RyKQogICAgICAgIGNvbW1vbl9ncm91cC5hZGRfYXJndW1lbnQoIi0tcnVuLWFzLXVz
      ZXIiLCAiLXUiLCBkZWZhdWx0PSIiLCB0eXBlPXN0ciwKICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgIGhlbHA9IlByb3ZpZGVzIGEgdXNlciBuYW1lIHRvIGNoZWNrIHRoZSBjbHVzdGVy
      J3MgaGVhbHRoIHN0YXR1cywgbXVzdCBiZSBwcmVmaXhlZCBieSAnY2xpZW50LiciKQogICAgICAg
      IGNvbW1vbl9ncm91cC5hZGRfYXJndW1lbnQoIi0tY2x1c3Rlci1uYW1lIiwgZGVmYXVsdD0ib3Bl
      bnNoaWZ0LXN0b3JhZ2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0i
      Q2VwaCBjbHVzdGVyIG5hbWUiKQogICAgICAgIGNvbW1vbl9ncm91cC5hZGRfYXJndW1lbnQoIi0t
      bmFtZXNwYWNlIiwgZGVmYXVsdD0iIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      IGhlbHA9Ik5hbWVzcGFjZSB3aGVyZSBDZXBoQ2x1c3RlciBpcyBydW5uaW5nIikKICAgICAgICBj
      b21tb25fZ3JvdXAuYWRkX2FyZ3VtZW50KCItLXJndy1wb29sLXByZWZpeCIsIGRlZmF1bHQ9IiIs
      CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSJSR1cgUG9vbCBwcmVmaXgi
      KQoKICAgICAgICBvdXRwdXRfZ3JvdXAgPSBhcmdQLmFkZF9hcmd1bWVudF9ncm91cCgnb3V0cHV0
      JykKICAgICAgICBvdXRwdXRfZ3JvdXAuYWRkX2FyZ3VtZW50KCItLWZvcm1hdCIsICItdCIsIGNo
      b2ljZXM9WyJqc29uIiwgImJhc2giXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      IGRlZmF1bHQ9J2pzb24nLCBoZWxwPSJQcm92aWRlcyB0aGUgb3V0cHV0IGZvcm1hdCAoanNvbiB8
      IGJhc2gpIikKICAgICAgICBvdXRwdXRfZ3JvdXAuYWRkX2FyZ3VtZW50KCItLW91dHB1dCIsICIt
      byIsIGRlZmF1bHQ9IiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSJP
      dXRwdXQgd2lsbCBiZSBzdG9yZWQgaW50byB0aGUgcHJvdmlkZWQgZmlsZSIpCiAgICAgICAgb3V0
      cHV0X2dyb3VwLmFkZF9hcmd1bWVudCgiLS1jZXBoZnMtZmlsZXN5c3RlbS1uYW1lIiwgZGVmYXVs
      dD0iIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9IlByb3ZpZGVzIHRo
      ZSBuYW1lIG9mIHRoZSBDZXBoIGZpbGVzeXN0ZW0iKQogICAgICAgIG91dHB1dF9ncm91cC5hZGRf
      YXJndW1lbnQoIi0tY2VwaGZzLWRhdGEtcG9vbC1uYW1lIiwgZGVmYXVsdD0iIiwKICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9IlByb3ZpZGVzIHRoZSBuYW1lIG9mIHRoZSBj
      ZXBoZnMgZGF0YSBwb29sIikKICAgICAgICBvdXRwdXRfZ3JvdXAuYWRkX2FyZ3VtZW50KCItLXJi
      ZC1kYXRhLXBvb2wtbmFtZSIsIGRlZmF1bHQ9IiIsIHJlcXVpcmVkPUZhbHNlLAogICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iUHJvdmlkZXMgdGhlIG5hbWUgb2YgdGhlIFJC
      RCBkYXRhcG9vbCIpCiAgICAgICAgb3V0cHV0X2dyb3VwLmFkZF9hcmd1bWVudCgiLS1yZ3ctZW5k
      cG9pbnQiLCBkZWZhdWx0PSIiLCByZXF1aXJlZD1GYWxzZSwKICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgIGhlbHA9IlJhZG9zIEdhdGVXYXkgZW5kcG9pbnQgKGluIDxJUD46PFBPUlQ+
      IGZvcm1hdCkiKQogICAgICAgIG91dHB1dF9ncm91cC5hZGRfYXJndW1lbnQoIi0tbW9uaXRvcmlu
      Zy1lbmRwb2ludCIsIGRlZmF1bHQ9IiIsIHJlcXVpcmVkPUZhbHNlLAogICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgaGVscD0iQ2VwaCBNYW5hZ2VyIHByb21ldGhldXMgZXhwb3J0ZXIg
      ZW5kcG9pbnRzIChjb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiA8SVA+IGVudHJpZXMgb2YgYWN0aXZl
      IGFuZCBzdGFuZGJ5IG1ncnMpIikKICAgICAgICBvdXRwdXRfZ3JvdXAuYWRkX2FyZ3VtZW50KCIt
      LW1vbml0b3JpbmctZW5kcG9pbnQtcG9ydCIsIGRlZmF1bHQ9IiIsIHJlcXVpcmVkPUZhbHNlLAog
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iQ2VwaCBNYW5hZ2VyIHByb21l
      dGhldXMgZXhwb3J0ZXIgcG9ydCIpCgogICAgICAgIHVwZ3JhZGVfZ3JvdXAgPSBhcmdQLmFkZF9h
      cmd1bWVudF9ncm91cCgndXBncmFkZScpCiAgICAgICAgdXBncmFkZV9ncm91cC5hZGRfYXJndW1l
      bnQoIi0tdXBncmFkZSIsIGFjdGlvbj0nc3RvcmVfdHJ1ZScsIGRlZmF1bHQ9RmFsc2UsCiAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iVXBncmFkZXMgdGhlICd1c2VyJyB3
      aXRoIGFsbCB0aGUgcGVybWlzc2lvbnMgbmVlZGVkIGZvciB0aGUgbmV3IGNsdXN0ZXIgdmVyc2lv
      biIpCgogICAgICAgIGlmIGFyZ3NfdG9fcGFyc2U6CiAgICAgICAgICAgIGFzc2VydCB0eXBlKGFy
      Z3NfdG9fcGFyc2UpID09IGxpc3QsIFwKICAgICAgICAgICAgICAgICJBcmd1bWVudCB0byAnZ2Vu
      X2FyZ19wYXJzZXInIHNob3VsZCBiZSBhIGxpc3QiCiAgICAgICAgZWxzZToKICAgICAgICAgICAg
      YXJnc190b19wYXJzZSA9IHN5cy5hcmd2WzE6XQogICAgICAgIHJldHVybiBhcmdQLnBhcnNlX2Fy
      Z3MoYXJnc190b19wYXJzZSkKCiAgICBkZWYgX2NoZWNrX2NvbmZsaWN0aW5nX29wdGlvbnMoc2Vs
      Zik6CiAgICAgICAgaWYgbm90IHNlbGYuX2FyZ19wYXJzZXIudXBncmFkZSBhbmQgbm90IHNlbGYu
      X2FyZ19wYXJzZXIucmJkX2RhdGFfcG9vbF9uYW1lOgogICAgICAgICAgICByYWlzZSBFeGVjdXRp
      b25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIkVpdGhlciAnLS11cGdyYWRlJyBv
      ciAnLS1yYmQtZGF0YS1wb29sLW5hbWUgPHBvb2xfbmFtZT4nIHNob3VsZCBiZSBzcGVjaWZpZWQi
      KQogICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIudXBncmFkZSBhbmQgc2VsZi5fYXJnX3BhcnNl
      ci5yYmRfZGF0YV9wb29sX25hbWU6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVF
      eGNlcHRpb24oCiAgICAgICAgICAgICAgICAiQm90aCAnLS11cGdyYWRlJyBhbmQgJy0tcmJkLWRh
      dGEtcG9vbC1uYW1lIDxwb29sX25hbWU+JyBzaG91bGQgbm90IGJlIHNwZWNpZmllZCwgY2hvb3Nl
      IG9ubHkgb25lIikKICAgICAgICAjIGEgdXNlciBuYW1lIG11c3QgYmUgcHJvdmlkZWQgd2hpbGUg
      dXNpbmcgJy0tdXBncmFkZScgb3B0aW9uCiAgICAgICAgaWYgbm90IHNlbGYuX2FyZ19wYXJzZXIu
      cnVuX2FzX3VzZXIgYW5kIHNlbGYuX2FyZ19wYXJzZXIudXBncmFkZToKICAgICAgICAgICAgcmFp
      c2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICJQbGVhc2UgcHJv
      dmlkZSBhbiBleGlzdGluZyB1c2VyLW5hbWUgdGhyb3VnaCAnLS1ydW4tYXMtdXNlcicgKG9yICct
      dScpIGZsYWcgd2hpbGUgdXBncmFkaW5nIikKCiAgICBkZWYgX2ludmFsaWRfZW5kcG9pbnQoc2Vs
      ZiwgZW5kcG9pbnRfc3RyKToKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlwdjQsIHBvcnQgPSBl
      bmRwb2ludF9zdHIuc3BsaXQoJzonKQogICAgICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAg
      ICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIk5v
      dCBhIHByb3BlciBlbmRwb2ludDoge30sIDxJUHY0Pjo8UE9SVD4sIGZvcm1hdCBpcyBleHBlY3Rl
      ZCIuZm9ybWF0KGVuZHBvaW50X3N0cikpCiAgICAgICAgaXBQYXJ0cyA9IGlwdjQuc3BsaXQoJy4n
      KQogICAgICAgIGlmIGxlbihpcFBhcnRzKSAhPSA0OgogICAgICAgICAgICByYWlzZSBFeGVjdXRp
      b25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIk5vdCBhIHZhbGlkIElQIGFkZHJl
      c3M6IHt9Ii5mb3JtYXQoaXB2NCkpCiAgICAgICAgZm9yIGVhY2hQYXJ0IGluIGlwUGFydHM6CiAg
      ICAgICAgICAgIGlmIG5vdCBlYWNoUGFydC5pc2RpZ2l0KCk6CiAgICAgICAgICAgICAgICByYWlz
      ZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgICAgICJJUCBhZGRy
      ZXNzIHBhcnRzIHNob3VsZCBiZSBudW1iZXJzOiB7fSIuZm9ybWF0KGlwdjQpKQogICAgICAgICAg
      ICBpbnRQYXJ0ID0gaW50KGVhY2hQYXJ0KQogICAgICAgICAgICBpZiBpbnRQYXJ0IDwgMCBvciBp
      bnRQYXJ0ID4gMjU0OgogICAgICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2Vw
      dGlvbigKICAgICAgICAgICAgICAgICAgICAiT3V0IG9mIHJhbmdlIElQIGFkZHJlc3Nlczoge30i
      LmZvcm1hdChpcHY0KSkKICAgICAgICBpZiBub3QgcG9ydC5pc2RpZ2l0KCk6CiAgICAgICAgICAg
      IHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oIlBvcnQgbm90IHZhbGlkOiB7fSIuZm9y
      bWF0KHBvcnQpKQogICAgICAgIGludFBvcnQgPSBpbnQocG9ydCkKICAgICAgICBpZiBpbnRQb3J0
      IDwgMSBvciBpbnRQb3J0ID4gMioqMTYtMToKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFp
      bHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICJPdXQgb2YgcmFuZ2UgcG9ydCBudW1iZXI6
      IHt9Ii5mb3JtYXQocG9ydCkpCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIGVuZHBvaW50
      X2RpYWwoc2VsZiwgZW5kcG9pbnRfc3RyLCB0aW1lb3V0PTMpOgogICAgICAgICMgaWYgdGhlICdj
      bHVzdGVyJyBpbnN0YW5jZSBpcyBhIGR1bW15IG9uZSwKICAgICAgICAjIGRvbid0IHRyeSB0byBy
      ZWFjaCBvdXQgdG8gdGhlIGVuZHBvaW50CiAgICAgICAgaWYgaXNpbnN0YW5jZShzZWxmLmNsdXN0
      ZXIsIER1bW15UmFkb3MpOgogICAgICAgICAgICByZXR1cm4KICAgICAgICBwcm90b2NvbHMgPSBb
      Imh0dHAiLCAiaHR0cHMiXQogICAgICAgIGZvciBwcmVmaXggaW4gcHJvdG9jb2xzOgogICAgICAg
      ICAgICB0cnk6CiAgICAgICAgICAgICAgICBlcCA9ICJ7fTovL3t9Ii5mb3JtYXQocHJlZml4LCBl
      bmRwb2ludF9zdHIpCiAgICAgICAgICAgICAgICByID0gcmVxdWVzdHMuaGVhZChlcCwgdGltZW91
      dD10aW1lb3V0KQogICAgICAgICAgICAgICAgaWYgci5zdGF0dXNfY29kZSA9PSAyMDA6CiAgICAg
      ICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAg
      IGNvbnRpbnVlCiAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAg
      ICAgICAgInVuYWJsZSB0byBjb25uZWN0IHRvIGVuZHBvaW50OiB7fSIuZm9ybWF0KGVuZHBvaW50
      X3N0cikpCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGFyZ19saXN0PU5vbmUpOgogICAgICAgIHNl
      bGYub3V0X21hcCA9IHt9CiAgICAgICAgc2VsZi5fZXhjbHVkZWRfa2V5cyA9IHNldCgpCiAgICAg
      ICAgc2VsZi5fYXJnX3BhcnNlciA9IHNlbGYuZ2VuX2FyZ19wYXJzZXIoYXJnc190b19wYXJzZT1h
      cmdfbGlzdCkKICAgICAgICBzZWxmLl9jaGVja19jb25mbGljdGluZ19vcHRpb25zKCkKICAgICAg
      ICBzZWxmLnJ1bl9hc191c2VyID0gc2VsZi5fYXJnX3BhcnNlci5ydW5fYXNfdXNlcgogICAgICAg
      IHNlbGYub3V0cHV0X2ZpbGUgPSBzZWxmLl9hcmdfcGFyc2VyLm91dHB1dAogICAgICAgIHNlbGYu
      Y2VwaF9jb25mID0gc2VsZi5fYXJnX3BhcnNlci5jZXBoX2NvbmYKICAgICAgICBzZWxmLk1JTl9V
      U0VSX0NBUF9QRVJNSVNTSU9OUyA9IHsKICAgICAgICAgICAgJ21ncic6ICdhbGxvdyBjb21tYW5k
      IGNvbmZpZycsCiAgICAgICAgICAgICdtb24nOiAnYWxsb3cgciwgYWxsb3cgY29tbWFuZCBxdW9y
      dW1fc3RhdHVzLCBhbGxvdyBjb21tYW5kIHZlcnNpb24nLAogICAgICAgICAgICAnb3NkJzogImFs
      bG93IHJ3eCBwb29sPXswfS5yZ3cubWV0YSwgIiArCiAgICAgICAgICAgICJhbGxvdyByIHBvb2w9
      LnJndy5yb290LCAiICsKICAgICAgICAgICAgImFsbG93IHJ3IHBvb2w9ezB9LnJndy5jb250cm9s
      LCAiICsKICAgICAgICAgICAgImFsbG93IHJ4IHBvb2w9ezB9LnJndy5sb2csICIgKwogICAgICAg
      ICAgICAiYWxsb3cgeCBwb29sPXswfS5yZ3cuYnVja2V0cy5pbmRleCIKICAgICAgICB9CiAgICAg
      ICAgIyBpZiB1c2VyIG5vdCBwcm92aWRlZCwgZ2l2ZSBhIGRlZmF1bHQgdXNlcgogICAgICAgIGlm
      IG5vdCBzZWxmLnJ1bl9hc191c2VyIGFuZCBub3Qgc2VsZi5fYXJnX3BhcnNlci51cGdyYWRlOgog
      ICAgICAgICAgICBzZWxmLnJ1bl9hc191c2VyID0gc2VsZi5FWFRFUk5BTF9VU0VSX05BTUUKICAg
      ICAgICBpZiBub3Qgc2VsZi5fYXJnX3BhcnNlci5yZ3dfcG9vbF9wcmVmaXggYW5kIG5vdCBzZWxm
      Ll9hcmdfcGFyc2VyLnVwZ3JhZGU6CiAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIucmd3X3Bv
      b2xfcHJlZml4ID0gc2VsZi5ERUZBVUxUX1JHV19QT09MX1BSRUZJWAogICAgICAgIGlmIHNlbGYu
      Y2VwaF9jb25mOgogICAgICAgICAgICBzZWxmLmNsdXN0ZXIgPSByYWRvcy5SYWRvcyhjb25mZmls
      ZT1zZWxmLmNlcGhfY29uZikKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLmNsdXN0ZXIg
      PSByYWRvcy5SYWRvcygpCiAgICAgICAgICAgIHNlbGYuY2x1c3Rlci5jb25mX3JlYWRfZmlsZSgp
      CiAgICAgICAgc2VsZi5jbHVzdGVyLmNvbm5lY3QoKQoKICAgIGRlZiBzaHV0ZG93bihzZWxmKToK
      ICAgICAgICBpZiBzZWxmLmNsdXN0ZXIuc3RhdGUgPT0gImNvbm5lY3RlZCI6CiAgICAgICAgICAg
      IHNlbGYuY2x1c3Rlci5zaHV0ZG93bigpCgogICAgZGVmIGdldF9mc2lkKHNlbGYpOgogICAgICAg
      IHJldHVybiBzdHIoc2VsZi5jbHVzdGVyLmdldF9mc2lkKCkpCgogICAgZGVmIF9jb21tb25fY21k
      X2pzb25fZ2VuKHNlbGYsIGNtZF9qc29uKToKICAgICAgICBjbWQgPSBqc29uLmR1bXBzKGNtZF9q
      c29uLCBzb3J0X2tleXM9VHJ1ZSkKICAgICAgICByZXRfdmFsLCBjbWRfb3V0LCBlcnJfbXNnID0g
      c2VsZi5jbHVzdGVyLm1vbl9jb21tYW5kKGNtZCwgYicnKQogICAgICAgIGlmIHNlbGYuX2FyZ19w
      YXJzZXIudmVyYm9zZToKICAgICAgICAgICAgcHJpbnQoIkNvbW1hbmQgSW5wdXQ6IHt9Ii5mb3Jt
      YXQoY21kKSkKICAgICAgICAgICAgcHJpbnQoIlJldHVybiBWYWw6IHt9XG5Db21tYW5kIE91dHB1
      dDoge31cbkVycm9yIE1lc3NhZ2U6IHt9XG4tLS0tLS0tLS0tXG4iLmZvcm1hdCgKICAgICAgICAg
      ICAgICAgICAgcmV0X3ZhbCwgY21kX291dCwgZXJyX21zZykpCiAgICAgICAganNvbl9vdXQgPSB7
      fQogICAgICAgICMgaWYgdGhlcmUgaXMgbm8gZXJyb3IgKGkuZTsgcmV0X3ZhbCBpcyBaRVJPKSBh
      bmQgJ2NtZF9vdXQnIGlzIG5vdCBlbXB0eQogICAgICAgICMgdGhlbiBjb252ZXJ0ICdjbWRfb3V0
      JyB0byBhIGpzb24gb3V0cHV0CiAgICAgICAgaWYgcmV0X3ZhbCA9PSAwIGFuZCBjbWRfb3V0Ogog
      ICAgICAgICAgICBqc29uX291dCA9IGpzb24ubG9hZHMoY21kX291dCkKICAgICAgICByZXR1cm4g
      cmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cKCiAgICBkZWYgZ2V0X2NlcGhfZXh0ZXJuYWxfbW9u
      X2RhdGEoc2VsZik6CiAgICAgICAgY21kX2pzb24gPSB7InByZWZpeCI6ICJxdW9ydW1fc3RhdHVz
      IiwgImZvcm1hdCI6ICJqc29uIn0KICAgICAgICByZXRfdmFsLCBqc29uX291dCwgZXJyX21zZyA9
      IHNlbGYuX2NvbW1vbl9jbWRfanNvbl9nZW4oY21kX2pzb24pCiAgICAgICAgIyBpZiB0aGVyZSBp
      cyBhbiB1bnN1Y2Nlc3NmdWwgYXR0ZW1wdCwKICAgICAgICBpZiByZXRfdmFsICE9IDAgb3IgbGVu
      KGpzb25fb3V0KSA9PSAwOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0
      aW9uKAogICAgICAgICAgICAgICAgIidxdW9ydW1fc3RhdHVzJyBjb21tYW5kIGZhaWxlZC5cbiIg
      KwogICAgICAgICAgICAgICAgIkVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3ZhbCAh
      PSAwIGVsc2Ugc2VsZi5FTVBUWV9PVVRQVVRfTElTVCkpCiAgICAgICAgcV9sZWFkZXJfbmFtZSA9
      IGpzb25fb3V0WydxdW9ydW1fbGVhZGVyX25hbWUnXQogICAgICAgIHFfbGVhZGVyX2RldGFpbHMg
      PSB7fQogICAgICAgIHFfbGVhZGVyX21hdGNoaW5nX2xpc3QgPSBbbCBmb3IgbCBpbiBqc29uX291
      dFsnbW9ubWFwJ11bJ21vbnMnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYg
      bFsnbmFtZSddID09IHFfbGVhZGVyX25hbWVdCiAgICAgICAgaWYgbGVuKHFfbGVhZGVyX21hdGNo
      aW5nX2xpc3QpID09IDA6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRp
      b24oIk5vIG1hdGNoaW5nICdtb24nIGRldGFpbHMgZm91bmQiKQogICAgICAgIHFfbGVhZGVyX2Rl
      dGFpbHMgPSBxX2xlYWRlcl9tYXRjaGluZ19saXN0WzBdCiAgICAgICAgIyBnZXQgdGhlIGFkZHJl
      c3MgdmVjdG9yIG9mIHRoZSBxdW9ydW0tbGVhZGVyCiAgICAgICAgcV9sZWFkZXJfYWRkcnZlYyA9
      IHFfbGVhZGVyX2RldGFpbHMuZ2V0KCdwdWJsaWNfYWRkcnMnLCB7fSkuZ2V0KCdhZGRydmVjJywg
      W10pCiAgICAgICAgIyBpZiB0aGUgcXVvcnVtLWxlYWRlciBoYXMgb25seSBvbmUgYWRkcmVzcyBp
      biB0aGUgYWRkcmVzcy12ZWN0b3IKICAgICAgICAjIGFuZCBpdCBpcyBvZiB0eXBlICd2MicgKGll
      OyB3aXRoIDxJUD46MzMwMCksCiAgICAgICAgIyByYWlzZSBhbiBleGNlcHRpb24gdG8gbWFrZSB1
      c2VyIGF3YXJlIHRoYXQKICAgICAgICAjIHRoZXkgaGF2ZSB0byBlbmFibGUgJ3YxJyAoaWU7IHdp
      dGggPElQPjo2Nzg5KSB0eXBlIGFzIHdlbGwKICAgICAgICBpZiBsZW4ocV9sZWFkZXJfYWRkcnZl
      YykgPT0gMSBhbmQgcV9sZWFkZXJfYWRkcnZlY1swXVsndHlwZSddID09ICd2Mic6CiAgICAgICAg
      ICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oIk9ubHkgJ3YyJyBhZGRyZXNzIHR5
      cGUgaXMgZW5hYmxlZCwgdXNlciBzaG91bGQgYWxzbyBlbmFibGUgJ3YxJyB0eXBlIGFzIHdlbGwi
      KQogICAgICAgIGlwX3BvcnQgPSBzdHIocV9sZWFkZXJfZGV0YWlsc1sncHVibGljX2FkZHInXS5z
      cGxpdCgnLycpWzBdKQogICAgICAgIHJldHVybiAie309e30iLmZvcm1hdChzdHIocV9sZWFkZXJf
      bmFtZSksIGlwX3BvcnQpCgogICAgZGVmIF9qb2luX2hvc3RfcG9ydChzZWxmLCBlbmRwb2ludCwg
      cG9ydCk6CiAgICAgICAgcG9ydCA9ICJ7fSIuZm9ybWF0KHBvcnQpCiAgICAgICAgIyByZWdleCB0
      byBjaGVjayB0aGUgZ2l2ZW4gZW5kcG9pbnQgaXMgZW5jbG9zZWQgaW4gc3F1YXJlIGJyYWNrZXRz
      CiAgICAgICAgaXB2Nl9yZWd4ID0gcmUuY29tcGlsZShyJ15cW1teXV0qXF0kJykKICAgICAgICAj
      IGVuZHBvaW50IGhhcyAnOicgaW4gaXQgYW5kIGlmIG5vdCAoYWxyZWFkeSkgZW5jbG9zZWQgaW4g
      c3F1YXJlIGJyYWNrZXRzCiAgICAgICAgaWYgZW5kcG9pbnQuY291bnQoJzonKSBhbmQgbm90IGlw
      djZfcmVneC5tYXRjaChlbmRwb2ludCk6CiAgICAgICAgICAgIGVuZHBvaW50ID0gJ1t7fV0nLmZv
      cm1hdChlbmRwb2ludCkKICAgICAgICBpZiBub3QgcG9ydDoKICAgICAgICAgICAgcmV0dXJuIGVu
      ZHBvaW50CiAgICAgICAgcmV0dXJuICc6Jy5qb2luKFtlbmRwb2ludCwgcG9ydF0pCgogICAgZGVm
      IF9jb252ZXJ0X2hvc3RuYW1lX3RvX2lwKHNlbGYsIGhvc3RfbmFtZSk6CiAgICAgICAgIyBpZiAn
      Y2x1c3RlcicgaW5zdGFuY2UgaXMgYSBkdW1teSB0eXBlLAogICAgICAgICMgY2FsbCB0aGUgZHVt
      bXkgaW5zdGFuY2UncyAiY29udmVydCIgbWV0aG9kCiAgICAgICAgaWYgbm90IGhvc3RfbmFtZToK
      ICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigiRW1wdHkgaG9zdG5h
      bWUgcHJvdmlkZWQiKQogICAgICAgIGlmIGlzaW5zdGFuY2Uoc2VsZi5jbHVzdGVyLCBEdW1teVJh
      ZG9zKToKICAgICAgICAgICAgcmV0dXJuIHNlbGYuY2x1c3Rlci5fY29udmVydF9ob3N0bmFtZV90
      b19pcChob3N0X25hbWUpCiAgICAgICAgaW1wb3J0IHNvY2tldAogICAgICAgIGlwID0gc29ja2V0
      LmdldGhvc3RieW5hbWUoaG9zdF9uYW1lKQogICAgICAgIGRlbCBzb2NrZXQKICAgICAgICByZXR1
      cm4gaXAKCiAgICBkZWYgZ2V0X2FjdGl2ZV9hbmRfc3RhbmRieV9tZ3JzKHNlbGYpOgogICAgICAg
      IG1vbml0b3JpbmdfZW5kcG9pbnRfcG9ydCA9IHNlbGYuX2FyZ19wYXJzZXIubW9uaXRvcmluZ19l
      bmRwb2ludF9wb3J0CiAgICAgICAgbW9uaXRvcmluZ19lbmRwb2ludF9pcCA9IHNlbGYuX2FyZ19w
      YXJzZXIubW9uaXRvcmluZ19lbmRwb2ludAogICAgICAgIHN0YW5kYnlfbWdycyA9IFtdCiAgICAg
      ICAgaWYgbm90IG1vbml0b3JpbmdfZW5kcG9pbnRfaXA6CiAgICAgICAgICAgIGNtZF9qc29uID0g
      eyJwcmVmaXgiOiAic3RhdHVzIiwgImZvcm1hdCI6ICJqc29uIn0KICAgICAgICAgICAgcmV0X3Zh
      bCwganNvbl9vdXQsIGVycl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29u
      KQogICAgICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAg
      ICAgICAgICBpZiByZXRfdmFsICE9IDAgb3IgbGVuKGpzb25fb3V0KSA9PSAwOgogICAgICAgICAg
      ICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICAg
      ICAiJ21nciBzZXJ2aWNlcycgY29tbWFuZCBmYWlsZWQuXG4iICsKICAgICAgICAgICAgICAgICAg
      ICAiRXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZyBpZiByZXRfdmFsICE9IDAgZWxzZSBzZWxmLkVN
      UFRZX09VVFBVVF9MSVNUKSkKICAgICAgICAgICAgbW9uaXRvcmluZ19lbmRwb2ludCA9IGpzb25f
      b3V0LmdldCgnbWdybWFwJywge30pLmdldCgKICAgICAgICAgICAgICAgICdzZXJ2aWNlcycsIHt9
      KS5nZXQoJ3Byb21ldGhldXMnLCAnJykKICAgICAgICAgICAgaWYgbm90IG1vbml0b3JpbmdfZW5k
      cG9pbnQ6CiAgICAgICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAog
      ICAgICAgICAgICAgICAgICAgICIncHJvbWV0aGV1cycgc2VydmljZSBub3QgZm91bmQsIGlzIHRo
      ZSBleHBvcnRlciBlbmFibGVkPycuXG4iKQogICAgICAgICAgICAjIG5vdyBjaGVjayB0aGUgc3Rh
      bmQtYnkgbWdyLXMKICAgICAgICAgICAgc3RhbmRieV9hcnIgPSBqc29uX291dC5nZXQoJ21ncm1h
      cCcsIHt9KS5nZXQoJ3N0YW5kYnlzJywgW10pCiAgICAgICAgICAgIGZvciBlYWNoX3N0YW5kYnkg
      aW4gc3RhbmRieV9hcnI6CiAgICAgICAgICAgICAgICBpZiAnbmFtZScgaW4gZWFjaF9zdGFuZGJ5
      LmtleXMoKToKICAgICAgICAgICAgICAgICAgICBzdGFuZGJ5X21ncnMuYXBwZW5kKGVhY2hfc3Rh
      bmRieVsnbmFtZSddKQogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBwYXJzZWRfZW5k
      cG9pbnQgPSB1cmxwYXJzZShtb25pdG9yaW5nX2VuZHBvaW50KQogICAgICAgICAgICBleGNlcHQg
      VmFsdWVFcnJvcjoKICAgICAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRp
      b24oCiAgICAgICAgICAgICAgICAgICAgImludmFsaWQgZW5kcG9pbnQ6IHt9Ii5mb3JtYXQobW9u
      aXRvcmluZ19lbmRwb2ludCkpCiAgICAgICAgICAgIG1vbml0b3JpbmdfZW5kcG9pbnRfaXAgPSBw
      YXJzZWRfZW5kcG9pbnQuaG9zdG5hbWUKICAgICAgICAgICAgaWYgbm90IG1vbml0b3JpbmdfZW5k
      cG9pbnRfcG9ydDoKICAgICAgICAgICAgICAgIG1vbml0b3JpbmdfZW5kcG9pbnRfcG9ydCA9ICJ7
      fSIuZm9ybWF0KHBhcnNlZF9lbmRwb2ludC5wb3J0KQoKICAgICAgICAjIGlmIG1vbml0b3Jpbmcg
      ZW5kcG9pbnQgcG9ydCBpcyBub3Qgc2V0LCBwdXQgYSBkZWZhdWx0IG1vbiBwb3J0CiAgICAgICAg
      aWYgbm90IG1vbml0b3JpbmdfZW5kcG9pbnRfcG9ydDoKICAgICAgICAgICAgbW9uaXRvcmluZ19l
      bmRwb2ludF9wb3J0ID0gc2VsZi5ERUZBVUxUX01PTklUT1JJTkdfRU5EUE9JTlRfUE9SVAoKICAg
      ICAgICB0cnk6CiAgICAgICAgICAgIGZhaWxlZF9pcCA9IG1vbml0b3JpbmdfZW5kcG9pbnRfaXAK
      ICAgICAgICAgICAgbW9uaXRvcmluZ19lbmRwb2ludF9pcCA9IHNlbGYuX2NvbnZlcnRfaG9zdG5h
      bWVfdG9faXAoCiAgICAgICAgICAgICAgICBtb25pdG9yaW5nX2VuZHBvaW50X2lwKQogICAgICAg
      ICAgICAjIGNvbGxlY3QgYWxsIHRoZSAnc3RhbmQtYnknIG1nciBpcHMKICAgICAgICAgICAgbWdy
      X2lwcyA9IFtdCiAgICAgICAgICAgIGZvciBlYWNoX3N0YW5kYnlfbWdyIGluIHN0YW5kYnlfbWdy
      czoKICAgICAgICAgICAgICAgIGZhaWxlZF9pcCA9IGVhY2hfc3RhbmRieV9tZ3IKICAgICAgICAg
      ICAgICAgIG1ncl9pcHMuYXBwZW5kKAogICAgICAgICAgICAgICAgICAgIHNlbGYuX2NvbnZlcnRf
      aG9zdG5hbWVfdG9faXAoZWFjaF9zdGFuZGJ5X21ncikpCiAgICAgICAgZXhjZXB0OgogICAgICAg
      ICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIkNv
      bnZlcnNpb24gb2YgaG9zdDoge30gdG8gSVAgZmFpbGVkLiAiCiAgICAgICAgICAgICAgICAiUGxl
      YXNlIGVudGVyIHRoZSBJUCBhZGRyZXNzZXMgb2YgYWxsIHRoZSBjZXBoLW1ncnMgd2l0aCB0aGUg
      Jy0tbW9uaXRvcmluZy1lbmRwb2ludCcgZmxhZyIuZm9ybWF0KGZhaWxlZF9pcCkpCiAgICAgICAg
      bW9uaXRvcmluZ19lbmRwb2ludCA9IHNlbGYuX2pvaW5faG9zdF9wb3J0KAogICAgICAgICAgICBt
      b25pdG9yaW5nX2VuZHBvaW50X2lwLCBtb25pdG9yaW5nX2VuZHBvaW50X3BvcnQpCiAgICAgICAg
      c2VsZi5faW52YWxpZF9lbmRwb2ludChtb25pdG9yaW5nX2VuZHBvaW50KQogICAgICAgIHNlbGYu
      ZW5kcG9pbnRfZGlhbChtb25pdG9yaW5nX2VuZHBvaW50KQoKICAgICAgICAjIGFkZCB0aGUgdmFs
      aWRhdGVkIGFjdGl2ZSBtZ3IgSVAgaW50byB0aGUgZmlyc3QgaW5kZXgKICAgICAgICBtZ3JfaXBz
      Lmluc2VydCgwLCBtb25pdG9yaW5nX2VuZHBvaW50X2lwKQogICAgICAgIGFsbF9tZ3JfaXBzX3N0
      ciA9ICIsIi5qb2luKG1ncl9pcHMpCiAgICAgICAgcmV0dXJuIGFsbF9tZ3JfaXBzX3N0ciwgbW9u
      aXRvcmluZ19lbmRwb2ludF9wb3J0CgogICAgZGVmIGNyZWF0ZV9jZXBoQ1NJS2V5cmluZ19jZXBo
      RlNQcm92aXNpb25lcihzZWxmKToKICAgICAgICAnJycKICAgICAgICBjb21tYW5kOiBjZXBoIGF1
      dGggZ2V0LW9yLWNyZWF0ZSBjbGllbnQuY3NpLWNlcGhmcy1wcm92aXNpb25lciBtb24gJ2FsbG93
      IHInIG1nciAnYWxsb3cgcncnIG9zZCAnYWxsb3cgcncgdGFnIGNlcGhmcyBtZXRhZGF0YT0qJwog
      ICAgICAgICcnJwogICAgICAgIGNtZF9qc29uID0geyJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3Jl
      YXRlIiwKICAgICAgICAgICAgICAgICAgICAiZW50aXR5IjogImNsaWVudC5jc2ktY2VwaGZzLXBy
      b3Zpc2lvbmVyIiwKICAgICAgICAgICAgICAgICAgICAiY2FwcyI6IFsibW9uIiwgImFsbG93IHIi
      LCAibWdyIiwgImFsbG93IHJ3IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAib3NkIiwg
      ImFsbG93IHJ3IHRhZyBjZXBoZnMgbWV0YWRhdGE9KiJdLAogICAgICAgICAgICAgICAgICAgICJm
      b3JtYXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cgPSBzZWxm
      Ll9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAgICMgaWYgdGhlcmUgaXMgYW4g
      dW5zdWNjZXNzZnVsIGF0dGVtcHQsCiAgICAgICAgaWYgcmV0X3ZhbCAhPSAwIG9yIGxlbihqc29u
      X291dCkgPT0gMDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigK
      ICAgICAgICAgICAgICAgICInYXV0aCBnZXQtb3ItY3JlYXRlIGNsaWVudC5jc2ktY2VwaGZzLXBy
      b3Zpc2lvbmVyJyBjb21tYW5kIGZhaWxlZC5cbiIgKwogICAgICAgICAgICAgICAgIkVycm9yOiB7
      fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3ZhbCAhPSAwIGVsc2Ugc2VsZi5FTVBUWV9PVVRQVVRf
      TElTVCkpCiAgICAgICAgcmV0dXJuIHN0cihqc29uX291dFswXVsna2V5J10pCgogICAgZGVmIGNy
      ZWF0ZV9jZXBoQ1NJS2V5cmluZ19jZXBoRlNOb2RlKHNlbGYpOgogICAgICAgIGNtZF9qc29uID0g
      eyJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3JlYXRlIiwKICAgICAgICAgICAgICAgICAgICAiZW50
      aXR5IjogImNsaWVudC5jc2ktY2VwaGZzLW5vZGUiLAogICAgICAgICAgICAgICAgICAgICJjYXBz
      IjogWyJtb24iLCAiYWxsb3cgciIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1nciIs
      ICJhbGxvdyBydyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm9zZCIsICJhbGxvdyBy
      dyB0YWcgY2VwaGZzICo9KiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1kcyIsICJh
      bGxvdyBydyJdLAogICAgICAgICAgICAgICAgICAgICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAg
      cmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNt
      ZF9qc29uKQogICAgICAgICMgaWYgdGhlcmUgaXMgYW4gdW5zdWNjZXNzZnVsIGF0dGVtcHQsCiAg
      ICAgICAgaWYgcmV0X3ZhbCAhPSAwIG9yIGxlbihqc29uX291dCkgPT0gMDoKICAgICAgICAgICAg
      cmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICInYXV0aCBn
      ZXQtb3ItY3JlYXRlIGNsaWVudC5jc2ktY2VwaGZzLW5vZGUnIGNvbW1hbmQgZmFpbGVkLlxuIiAr
      CiAgICAgICAgICAgICAgICAiRXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZyBpZiByZXRfdmFsICE9
      IDAgZWxzZSBzZWxmLkVNUFRZX09VVFBVVF9MSVNUKSkKICAgICAgICByZXR1cm4gc3RyKGpzb25f
      b3V0WzBdWydrZXknXSkKCiAgICBkZWYgY3JlYXRlX2NlcGhDU0lLZXlyaW5nX1JCRFByb3Zpc2lv
      bmVyKHNlbGYpOgogICAgICAgIGNtZF9qc29uID0geyJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3Jl
      YXRlIiwKICAgICAgICAgICAgICAgICAgICAiZW50aXR5IjogImNsaWVudC5jc2ktcmJkLXByb3Zp
      c2lvbmVyIiwKICAgICAgICAgICAgICAgICAgICAiY2FwcyI6IFsibW9uIiwgInByb2ZpbGUgcmJk
      IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWdyIiwgImFsbG93IHJ3IiwKICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAib3NkIiwgInByb2ZpbGUgcmJkIl0sCiAgICAgICAgICAg
      ICAgICAgICAgImZvcm1hdCI6ICJqc29uIn0KICAgICAgICByZXRfdmFsLCBqc29uX291dCwgZXJy
      X21zZyA9IHNlbGYuX2NvbW1vbl9jbWRfanNvbl9nZW4oY21kX2pzb24pCiAgICAgICAgIyBpZiB0
      aGVyZSBpcyBhbiB1bnN1Y2Nlc3NmdWwgYXR0ZW1wdCwKICAgICAgICBpZiByZXRfdmFsICE9IDAg
      b3IgbGVuKGpzb25fb3V0KSA9PSAwOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJl
      RXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIidhdXRoIGdldC1vci1jcmVhdGUgY2xpZW50LmNz
      aS1yYmQtcHJvdmlzaW9uZXInIGNvbW1hbmQgZmFpbGVkLlxuIiArCiAgICAgICAgICAgICAgICAi
      RXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZyBpZiByZXRfdmFsICE9IDAgZWxzZSBzZWxmLkVNUFRZ
      X09VVFBVVF9MSVNUKSkKICAgICAgICByZXR1cm4gc3RyKGpzb25fb3V0WzBdWydrZXknXSkKCiAg
      ICBkZWYgZ2V0X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscyhzZWxmKToKICAgICAgICBjbWRfanNv
      biA9IHsicHJlZml4IjogImZzIGxzIiwgImZvcm1hdCI6ICJqc29uIn0KICAgICAgICByZXRfdmFs
      LCBqc29uX291dCwgZXJyX21zZyA9IHNlbGYuX2NvbW1vbl9jbWRfanNvbl9nZW4oY21kX2pzb24p
      CiAgICAgICAgIyBpZiB0aGVyZSBpcyBhbiB1bnN1Y2Nlc3NmdWwgYXR0ZW1wdCwgcmVwb3J0IGFu
      IGVycm9yCiAgICAgICAgaWYgcmV0X3ZhbCAhPSAwOgogICAgICAgICAgICAjIGlmIGZzIGFuZCBk
      YXRhX3Bvb2wgYXJndW1lbnRzIGFyZSBub3Qgc2V0LCBzaWxlbnRseSByZXR1cm4KICAgICAgICAg
      ICAgaWYgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZmlsZXN5c3RlbV9uYW1lID09ICIiIGFuZCBz
      ZWxmLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSA9PSAiIjoKICAgICAgICAgICAg
      ICAgIHJldHVybgogICAgICAgICAgICAjIGlmIHVzZXIgaGFzIHByb3ZpZGVkIGFueSBvZiB0aGUK
      ICAgICAgICAgICAgIyAnLS1jZXBoZnMtZmlsZXN5c3RlbS1uYW1lJyBvciAnLS1jZXBoZnMtZGF0
      YS1wb29sLW5hbWUnIGFyZ3VtZW50cywKICAgICAgICAgICAgIyByYWlzZSBhbiBleGNlcHRpb24g
      YXMgd2UgYXJlIHVuYWJsZSB0byB2ZXJpZnkgdGhlIGFyZ3MKICAgICAgICAgICAgcmFpc2UgRXhl
      Y3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICInZnMgbHMnIGNlcGggY2Fs
      bCBmYWlsZWQgd2l0aCBlcnJvcjoge30iLmZvcm1hdChlcnJfbXNnKSkKCiAgICAgICAgbWF0Y2hp
      bmdfanNvbl9vdXQgPSB7fQogICAgICAgICMgaWYgJy0tY2VwaGZzLWZpbGVzeXN0ZW0tbmFtZScg
      YXJndW1lbnQgaXMgcHJvdmlkZWQsCiAgICAgICAgIyBjaGVjayB3aGV0aGVyIHRoZSBwcm92aWRl
      ZCBmaWxlc3lzdGVtLW5hbWUgZXhpc3RzIG9yIG5vdAogICAgICAgIGlmIHNlbGYuX2FyZ19wYXJz
      ZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZToKICAgICAgICAgICAgIyBnZXQgdGhlIG1hdGNoaW5n
      IGxpc3QKICAgICAgICAgICAgbWF0Y2hpbmdfanNvbl9vdXRfbGlzdCA9IFttYXRjaGVkIGZvciBt
      YXRjaGVkIGluIGpzb25fb3V0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      aWYgc3RyKG1hdGNoZWRbJ25hbWUnXSkgPT0gc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZmlsZXN5
      c3RlbV9uYW1lXQogICAgICAgICAgICAjIHVuYWJsZSB0byBmaW5kIGEgbWF0Y2hpbmcgZnMtbmFt
      ZSwgcmFpc2UgYW4gZXJyb3IKICAgICAgICAgICAgaWYgbGVuKG1hdGNoaW5nX2pzb25fb3V0X2xp
      c3QpID09IDA6CiAgICAgICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9u
      KAogICAgICAgICAgICAgICAgICAgICgiRmlsZXN5c3RlbSBwcm92aWRlZCwgJ3t9JywgIiArCiAg
      ICAgICAgICAgICAgICAgICAgICJpcyBub3QgZm91bmQgaW4gdGhlIGZzLWxpc3Q6ICd7fSciKS5m
      b3JtYXQoCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2Zp
      bGVzeXN0ZW1fbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgW3N0cih4WyduYW1lJ10pIGZv
      ciB4IGluIGpzb25fb3V0XSkpCiAgICAgICAgICAgIG1hdGNoaW5nX2pzb25fb3V0ID0gbWF0Y2hp
      bmdfanNvbl9vdXRfbGlzdFswXQogICAgICAgICMgaWYgY2VwaGZzIGZpbGVzeXN0ZW0gbmFtZSBp
      cyBub3QgcHJvdmlkZWQsCiAgICAgICAgIyB0cnkgdG8gZ2V0IGEgZGVmYXVsdCBmcyBuYW1lIGJ5
      IGRvaW5nIHRoZSBmb2xsb3dpbmcKICAgICAgICBlbHNlOgogICAgICAgICAgICAjIGEuIGNoZWNr
      IGlmIHRoZXJlIGlzIG9ubHkgb25lIGZpbGVzeXN0ZW0gaXMgcHJlc2VudAogICAgICAgICAgICBp
      ZiBsZW4oanNvbl9vdXQpID09IDE6CiAgICAgICAgICAgICAgICBtYXRjaGluZ19qc29uX291dCA9
      IGpzb25fb3V0WzBdCiAgICAgICAgICAgICMgYi4gb3IgZWxzZSwgY2hlY2sgaWYgZGF0YV9wb29s
      IG5hbWUgaXMgcHJvdmlkZWQKICAgICAgICAgICAgZWxpZiBzZWxmLl9hcmdfcGFyc2VyLmNlcGhm
      c19kYXRhX3Bvb2xfbmFtZToKICAgICAgICAgICAgICAgICMgYW5kIGlmIHByZXNlbnQsIGNoZWNr
      IHdoZXRoZXIgdGhlcmUgZXhpc3RzIGEgZnMgd2hpY2ggaGFzIHRoZSBkYXRhX3Bvb2wKICAgICAg
      ICAgICAgICAgIGZvciBlYWNoSiBpbiBqc29uX291dDoKICAgICAgICAgICAgICAgICAgICBpZiBz
      ZWxmLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSBpbiBlYWNoSlsnZGF0YV9wb29s
      cyddOgogICAgICAgICAgICAgICAgICAgICAgICBtYXRjaGluZ19qc29uX291dCA9IGVhY2hKCiAg
      ICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICAjIGlmIHRoZXJlIGlz
      IG5vIG1hdGNoaW5nIGZzIGV4aXN0cywgdGhhdCBtZWFucyBwcm92aWRlZCBkYXRhX3Bvb2wgbmFt
      ZSBpcyBpbnZhbGlkCiAgICAgICAgICAgICAgICBpZiBub3QgbWF0Y2hpbmdfanNvbl9vdXQ6CiAg
      ICAgICAgICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAg
      ICAgICAgICAgICAgICAgICAgIlByb3ZpZGVkIGRhdGFfcG9vbCBuYW1lLCB7fSwgZG9lcyBub3Qg
      ZXhpc3RzIi5mb3JtYXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9hcmdfcGFy
      c2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSkpCiAgICAgICAgICAgICMgYy4gaWYgbm90aGluZyBp
      cyBzZXQgYW5kIGNvdWxkbid0IGZpbmQgYSBkZWZhdWx0LAogICAgICAgICAgICBlbHNlOgogICAg
      ICAgICAgICAgICAgIyBqdXN0IHJldHVybiBzaWxlbnRseQogICAgICAgICAgICAgICAgcmV0dXJu
      CgogICAgICAgIGlmIG1hdGNoaW5nX2pzb25fb3V0OgogICAgICAgICAgICBzZWxmLl9hcmdfcGFy
      c2VyLmNlcGhmc19maWxlc3lzdGVtX25hbWUgPSBzdHIoCiAgICAgICAgICAgICAgICBtYXRjaGlu
      Z19qc29uX291dFsnbmFtZSddKQoKICAgICAgICBpZiB0eXBlKG1hdGNoaW5nX2pzb25fb3V0Wydk
      YXRhX3Bvb2xzJ10pID09IGxpc3Q6CiAgICAgICAgICAgICMgaWYgdGhlIHVzZXIgaGFzIGFscmVh
      ZHkgcHJvdmlkZWQgZGF0YS1wb29sLW5hbWUsCiAgICAgICAgICAgICMgdGhyb3VnaCAtLWNlcGhm
      cy1kYXRhLXBvb2wtbmFtZQogICAgICAgICAgICBpZiBzZWxmLl9hcmdfcGFyc2VyLmNlcGhmc19k
      YXRhX3Bvb2xfbmFtZToKICAgICAgICAgICAgICAgICMgaWYgdGhlIHByb3ZpZGVkIG5hbWUgaXMg
      bm90IG1hdGNoaW5nIHdpdGggdGhlIG9uZSBpbiB0aGUgbGlzdAogICAgICAgICAgICAgICAgaWYg
      c2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUgbm90IGluIG1hdGNoaW5nX2pz
      b25fb3V0WydkYXRhX3Bvb2xzJ106CiAgICAgICAgICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9u
      RmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICAgICAgICAgInt9OiAne30nLCB7fTog
      e30iLmZvcm1hdCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJQcm92aWRlZCBkYXRhLXBv
      b2wtbmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9hcmdfcGFyc2VyLmNl
      cGhmc19kYXRhX3Bvb2xfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkb2Vzbid0
      IG1hdGNoIGZyb20gdGhlIGRhdGEtcG9vbHMnIGxpc3QiLAogICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgW3N0cih4KSBmb3IgeCBpbiBtYXRjaGluZ19qc29uX291dFsnZGF0YV9wb29scyddXSkp
      CiAgICAgICAgICAgICMgaWYgZGF0YV9wb29sIG5hbWUgaXMgbm90IHByb3ZpZGVkLAogICAgICAg
      ICAgICAjIHRoZW4gdHJ5IHRvIGZpbmQgYSBkZWZhdWx0IGRhdGEgcG9vbCBuYW1lCiAgICAgICAg
      ICAgIGVsc2U6CiAgICAgICAgICAgICAgICAjIGlmIG5vIGRhdGFfcG9vbHMgZXhpc3QsIHNpbGVu
      dGx5IHJldHVybgogICAgICAgICAgICAgICAgaWYgbGVuKG1hdGNoaW5nX2pzb25fb3V0WydkYXRh
      X3Bvb2xzJ10pID09IDA6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAg
      ICBzZWxmLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSA9IHN0cigKICAgICAgICAg
      ICAgICAgICAgICBtYXRjaGluZ19qc29uX291dFsnZGF0YV9wb29scyddWzBdKQogICAgICAgICAg
      ICAjIGlmIHRoZXJlIGFyZSBtb3JlIHRoYW4gb25lICdkYXRhX3Bvb2xzJyBleGlzdCwKICAgICAg
      ICAgICAgIyB0aGVuIHdhcm4gdGhlIHVzZXIgdGhhdCB3ZSBhcmUgdXNpbmcgdGhlIHNlbGVjdGVk
      IG5hbWUKICAgICAgICAgICAgaWYgbGVuKG1hdGNoaW5nX2pzb25fb3V0WydkYXRhX3Bvb2xzJ10p
      ID4gMToKICAgICAgICAgICAgICAgIHByaW50KCJ7fToge31cbnt9OiAne30nXG4iLmZvcm1hdCgK
      ICAgICAgICAgICAgICAgICAgICAiV0FSTklORzogTXVsdGlwbGUgZGF0YSBwb29scyBkZXRlY3Rl
      ZCIsCiAgICAgICAgICAgICAgICAgICAgW3N0cih4KSBmb3IgeCBpbiBtYXRjaGluZ19qc29uX291
      dFsnZGF0YV9wb29scyddXSwKICAgICAgICAgICAgICAgICAgICAiVXNpbmcgdGhlIGRhdGEtcG9v
      bCIsCiAgICAgICAgICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29s
      X25hbWUpKQoKICAgIGRlZiBjcmVhdGVfY2VwaENTSUtleXJpbmdfUkJETm9kZShzZWxmKToKICAg
      ICAgICBjbWRfanNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0ZSIsCiAgICAgICAg
      ICAgICAgICAgICAgImVudGl0eSI6ICJjbGllbnQuY3NpLXJiZC1ub2RlIiwKICAgICAgICAgICAg
      ICAgICAgICAiY2FwcyI6IFsibW9uIiwgInByb2ZpbGUgcmJkIiwKICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAib3NkIiwgInByb2ZpbGUgcmJkIl0sCiAgICAgICAgICAgICAgICAgICAgImZv
      cm1hdCI6ICJqc29uIn0KICAgICAgICByZXRfdmFsLCBqc29uX291dCwgZXJyX21zZyA9IHNlbGYu
      X2NvbW1vbl9jbWRfanNvbl9nZW4oY21kX2pzb24pCiAgICAgICAgIyBpZiB0aGVyZSBpcyBhbiB1
      bnN1Y2Nlc3NmdWwgYXR0ZW1wdCwKICAgICAgICBpZiByZXRfdmFsICE9IDAgb3IgbGVuKGpzb25f
      b3V0KSA9PSAwOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAog
      ICAgICAgICAgICAgICAgIidhdXRoIGdldC1vci1jcmVhdGUgY2xpZW50LmNzaS1yYmQtbm9kZScg
      Y29tbWFuZCBmYWlsZWRcbiIgKwogICAgICAgICAgICAgICAgIkVycm9yOiB7fSIuZm9ybWF0KGVy
      cl9tc2cgaWYgcmV0X3ZhbCAhPSAwIGVsc2Ugc2VsZi5FTVBUWV9PVVRQVVRfTElTVCkpCiAgICAg
      ICAgcmV0dXJuIHN0cihqc29uX291dFswXVsna2V5J10pCgogICAgZGVmIGNyZWF0ZV9jaGVja2Vy
      S2V5KHNlbGYpOgogICAgICAgIGNtZF9qc29uID0geyJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3Jl
      YXRlIiwKICAgICAgICAgICAgICAgICAgICAiZW50aXR5Ijogc2VsZi5ydW5fYXNfdXNlciwKICAg
      ICAgICAgICAgICAgICAgICAiY2FwcyI6IFsibW9uIiwgc2VsZi5NSU5fVVNFUl9DQVBfUEVSTUlT
      U0lPTlNbJ21vbiddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtZ3IiLCBzZWxmLk1J
      Tl9VU0VSX0NBUF9QRVJNSVNTSU9OU1snbWdyJ10sCiAgICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgIm9zZCIsIHNlbGYuTUlOX1VTRVJfQ0FQX1BFUk1JU1NJT05TWydvc2QnXS5mb3JtYXQoc2Vs
      Zi5fYXJnX3BhcnNlci5yZ3dfcG9vbF9wcmVmaXgpXSwKICAgICAgICAgICAgICAgICAgICAiZm9y
      bWF0IjogImpzb24ifQogICAgICAgIHJldF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0gc2VsZi5f
      Y29tbW9uX2NtZF9qc29uX2dlbihjbWRfanNvbikKICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVu
      c3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAgICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9v
      dXQpID09IDA6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAg
      ICAgICAgICAgICAgICAiJ2F1dGggZ2V0LW9yLWNyZWF0ZSB7fScgY29tbWFuZCBmYWlsZWRcbiIu
      Zm9ybWF0KHNlbGYucnVuX2FzX3VzZXIpICsKICAgICAgICAgICAgICAgICJFcnJvcjoge30iLmZv
      cm1hdChlcnJfbXNnIGlmIHJldF92YWwgIT0gMCBlbHNlIHNlbGYuRU1QVFlfT1VUUFVUX0xJU1Qp
      KQogICAgICAgIHJldHVybiBzdHIoanNvbl9vdXRbMF1bJ2tleSddKQoKICAgIGRlZiBjcmVhdGVf
      cmd3X2FkbWluX29wc191c2VyKHNlbGYpOgogICAgICAgIGNtZCA9IFsncmFkb3Nndy1hZG1pbics
      ICd1c2VyJywgJ2NyZWF0ZScsICctLXVpZCcsIHNlbGYuRVhURVJOQUxfUkdXX0FETUlOX09QU19V
      U0VSX05BTUUsICctLWRpc3BsYXktbmFtZScsCiAgICAgICAgICAgICAgICdSb29rIFJHVyBBZG1p
      biBPcHMgdXNlcicsICctLWNhcHMnLCAnYnVja2V0cz0qO3VzZXJzPSo7dXNhZ2U9cmVhZDttZXRh
      ZGF0YT1yZWFkO3pvbmU9cmVhZCddCiAgICAgICAgdHJ5OgogICAgICAgICAgICBvdXRwdXQgPSBz
      dWJwcm9jZXNzLmNoZWNrX291dHB1dChjbWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgIHN0ZGVycj1zdWJwcm9jZXNzLlBJUEUpCiAgICAgICAgZXhjZXB0IHN1
      YnByb2Nlc3MuQ2FsbGVkUHJvY2Vzc0Vycm9yIGFzIGV4ZWM6CiAgICAgICAgICAgICMgaWYgdGhl
      IHVzZXIgYWxyZWFkeSBleGlzdHMsIHdlIGp1c3QgcXVlcnkgaXQKICAgICAgICAgICAgaWYgZXhl
      Yy5yZXR1cm5jb2RlID09IGVycm5vLkVFWElTVDoKICAgICAgICAgICAgICAgIGNtZCA9IFsncmFk
      b3Nndy1hZG1pbicsICd1c2VyJywgJ2luZm8nLAogICAgICAgICAgICAgICAgICAgICAgICctLXVp
      ZCcsIHNlbGYuRVhURVJOQUxfUkdXX0FETUlOX09QU19VU0VSX05BTUUKICAgICAgICAgICAgICAg
      ICAgICAgICBdCiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgb3V0cHV0
      ID0gc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoY21kLAogICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZGVycj1zdWJwcm9jZXNzLlBJUEUpCiAgICAg
      ICAgICAgICAgICBleGNlcHQgc3VicHJvY2Vzcy5DYWxsZWRQcm9jZXNzRXJyb3IgYXMgZXhlYzoK
      ICAgICAgICAgICAgICAgICAgICBlcnJfbXNnID0gImZhaWxlZCB0byBleGVjdXRlIGNvbW1hbmQg
      JXMuIE91dHB1dDogJXMuIENvZGU6ICVzLiBFcnJvcjogJXMiICUgKAogICAgICAgICAgICAgICAg
      ICAgICAgICBjbWQsIGV4ZWMub3V0cHV0LCBleGVjLnJldHVybmNvZGUsIGV4ZWMuc3RkZXJyKQog
      ICAgICAgICAgICAgICAgICAgIHJhaXNlIEV4Y2VwdGlvbihlcnJfbXNnKQogICAgICAgICAgICBl
      bHNlOgogICAgICAgICAgICAgICAgZXJyX21zZyA9ICJmYWlsZWQgdG8gZXhlY3V0ZSBjb21tYW5k
      ICVzLiBPdXRwdXQ6ICVzLiBDb2RlOiAlcy4gRXJyb3I6ICVzIiAlICgKICAgICAgICAgICAgICAg
      ICAgICBjbWQsIGV4ZWMub3V0cHV0LCBleGVjLnJldHVybmNvZGUsIGV4ZWMuc3RkZXJyKQogICAg
      ICAgICAgICAgICAgcmFpc2UgRXhjZXB0aW9uKGVycl9tc2cpCgogICAgICAgIGpzb25vdXRwdXQg
      PSBqc29uLmxvYWRzKG91dHB1dCkKICAgICAgICByZXR1cm4ganNvbm91dHB1dFsia2V5cyJdWzBd
      WydhY2Nlc3Nfa2V5J10sIGpzb25vdXRwdXRbImtleXMiXVswXVsnc2VjcmV0X2tleSddCgogICAg
      ZGVmIF9nZW5fb3V0cHV0X21hcChzZWxmKToKICAgICAgICBpZiBzZWxmLm91dF9tYXA6CiAgICAg
      ICAgICAgIHJldHVybgogICAgICAgIHBvb2xzX3RvX3ZhbGlkYXRlID0gW3NlbGYuX2FyZ19wYXJz
      ZXIucmJkX2RhdGFfcG9vbF9uYW1lXQogICAgICAgICMgaWYgcmd3X2VuZHBvaW50IGlzIHByb3Zp
      ZGVkLCB2YWxpZGF0ZSBpdAogICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIucmd3X2VuZHBvaW50
      OgogICAgICAgICAgICBzZWxmLl9pbnZhbGlkX2VuZHBvaW50KHNlbGYuX2FyZ19wYXJzZXIucmd3
      X2VuZHBvaW50KQogICAgICAgICAgICBzZWxmLmVuZHBvaW50X2RpYWwoc2VsZi5fYXJnX3BhcnNl
      ci5yZ3dfZW5kcG9pbnQpCiAgICAgICAgICAgIHJnd19wb29sX3RvX3ZhbGlkYXRlID0gWyJ7MH0u
      cmd3Lm1ldGEiLmZvcm1hdChzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeCksCiAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIucmd3LnJvb3QiLAogICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAiezB9LnJndy5jb250cm9sIi5mb3JtYXQoCiAgICAgICAg
      ICAgICAgICBzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeCksCiAgICAgICAgICAgICAg
      ICAiezB9LnJndy5sb2ciLmZvcm1hdCgKICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIu
      cmd3X3Bvb2xfcHJlZml4KV0KICAgICAgICAgICAgcG9vbHNfdG9fdmFsaWRhdGUuZXh0ZW5kKHJn
      d19wb29sX3RvX3ZhbGlkYXRlKQogICAgICAgIGZvciBwb29sIGluIHBvb2xzX3RvX3ZhbGlkYXRl
      OgogICAgICAgICAgICBpZiBub3Qgc2VsZi5jbHVzdGVyLnBvb2xfZXhpc3RzKHBvb2wpOgogICAg
      ICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAg
      ICAgICAgICAiVGhlIHByb3ZpZGVkIHBvb2wsICd7fScsIGRvZXMgbm90IGV4aXN0Ii5mb3JtYXQo
      cG9vbCkpCiAgICAgICAgc2VsZi5fZXhjbHVkZWRfa2V5cy5hZGQoJ0NMVVNURVJfTkFNRScpCiAg
      ICAgICAgc2VsZi5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICBzZWxmLm91
      dF9tYXBbJ05BTUVTUEFDRSddID0gc2VsZi5fYXJnX3BhcnNlci5uYW1lc3BhY2UKICAgICAgICBz
      ZWxmLm91dF9tYXBbJ0NMVVNURVJfTkFNRSddID0gc2VsZi5fYXJnX3BhcnNlci5jbHVzdGVyX25h
      bWUKICAgICAgICBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxfRlNJRCddID0gc2VsZi5nZXRf
      ZnNpZCgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydST09LX0VYVEVSTkFMX1VTRVJOQU1FJ10gPSBz
      ZWxmLnJ1bl9hc191c2VyCiAgICAgICAgc2VsZi5vdXRfbWFwWydST09LX0VYVEVSTkFMX0NFUEhf
      TU9OX0RBVEEnXSA9IHNlbGYuZ2V0X2NlcGhfZXh0ZXJuYWxfbW9uX2RhdGEoKQogICAgICAgIHNl
      bGYub3V0X21hcFsnUk9PS19FWFRFUk5BTF9VU0VSX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2hl
      Y2tlcktleSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfUkJEX05PREVfU0VDUkVUX1NFQ1JF
      VCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfUkJETm9kZSgpCiAgICAgICAgc2VsZi5v
      dXRfbWFwWydDU0lfUkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENT
      SUtleXJpbmdfUkJEUHJvdmlzaW9uZXIoKQogICAgICAgIHNlbGYub3V0X21hcFsnQ0VQSEZTX1BP
      T0xfTkFNRSddID0gc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUKICAgICAg
      ICBzZWxmLm91dF9tYXBbJ0NFUEhGU19GU19OQU1FJ10gPSBzZWxmLl9hcmdfcGFyc2VyLmNlcGhm
      c19maWxlc3lzdGVtX25hbWUKICAgICAgICBzZWxmLm91dF9tYXBbJ0NTSV9DRVBIRlNfTk9ERV9T
      RUNSRVQnXSA9ICcnCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfQ0VQSEZTX1BST1ZJU0lPTkVS
      X1NFQ1JFVCddID0gJycKICAgICAgICAjIGNyZWF0ZSBDZXBoRlMgbm9kZSBhbmQgcHJvdmlzaW9u
      ZXIga2V5cmluZyBvbmx5IHdoZW4gTURTIGV4aXN0cwogICAgICAgIGlmIHNlbGYub3V0X21hcFsn
      Q0VQSEZTX0ZTX05BTUUnXSBhbmQgc2VsZi5vdXRfbWFwWydDRVBIRlNfUE9PTF9OQU1FJ106CiAg
      ICAgICAgICAgIHNlbGYub3V0X21hcFsnQ1NJX0NFUEhGU19OT0RFX1NFQ1JFVCddID0gc2VsZi5j
      cmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZTTm9kZSgKICAgICAgICAgICAgKQogICAgICAgICAg
      ICBzZWxmLm91dF9tYXBbJ0NTSV9DRVBIRlNfUFJPVklTSU9ORVJfU0VDUkVUJ10gPSBzZWxmLmNy
      ZWF0ZV9jZXBoQ1NJS2V5cmluZ19jZXBoRlNQcm92aXNpb25lcigpCiAgICAgICAgc2VsZi5vdXRf
      bWFwWydSR1dfRU5EUE9JTlQnXSA9IHNlbGYuX2FyZ19wYXJzZXIucmd3X2VuZHBvaW50CiAgICAg
      ICAgc2VsZi5vdXRfbWFwWydNT05JVE9SSU5HX0VORFBPSU5UJ10sIFwKICAgICAgICAgICAgc2Vs
      Zi5vdXRfbWFwWydNT05JVE9SSU5HX0VORFBPSU5UX1BPUlQnXSA9IHNlbGYuZ2V0X2FjdGl2ZV9h
      bmRfc3RhbmRieV9tZ3JzKCkKICAgICAgICBzZWxmLm91dF9tYXBbJ1JCRF9QT09MX05BTUUnXSA9
      IHNlbGYuX2FyZ19wYXJzZXIucmJkX2RhdGFfcG9vbF9uYW1lCiAgICAgICAgc2VsZi5vdXRfbWFw
      WydSR1dfUE9PTF9QUkVGSVgnXSA9IHNlbGYuX2FyZ19wYXJzZXIucmd3X3Bvb2xfcHJlZml4CiAg
      ICAgICAgc2VsZi5vdXRfbWFwWydBQ0NFU1NfS0VZJ10sIHNlbGYub3V0X21hcFsnU0VDUkVUX0tF
      WSddID0gc2VsZi5jcmVhdGVfcmd3X2FkbWluX29wc191c2VyKCkKCiAgICBkZWYgZ2VuX3NoZWxs
      X291dChzZWxmKToKICAgICAgICBzZWxmLl9nZW5fb3V0cHV0X21hcCgpCiAgICAgICAgc2hPdXRJ
      TyA9IFN0cmluZ0lPKCkKICAgICAgICBmb3IgaywgdiBpbiBzZWxmLm91dF9tYXAuaXRlbXMoKToK
      ICAgICAgICAgICAgaWYgdiBhbmQgayBub3QgaW4gc2VsZi5fZXhjbHVkZWRfa2V5czoKICAgICAg
      ICAgICAgICAgIHNoT3V0SU8ud3JpdGUoJ2V4cG9ydCB7fT17fXt9Jy5mb3JtYXQoaywgdiwgTElO
      RVNFUCkpCiAgICAgICAgc2hPdXQgPSBzaE91dElPLmdldHZhbHVlKCkKICAgICAgICBzaE91dElP
      LmNsb3NlKCkKICAgICAgICByZXR1cm4gc2hPdXQKCiAgICBkZWYgZ2VuX2pzb25fb3V0KHNlbGYp
      OgogICAgICAgIHNlbGYuX2dlbl9vdXRwdXRfbWFwKCkKICAgICAgICBqc29uX291dCA9IFsKICAg
      ICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1jZXBoLW1vbi1lbmRwb2lu
      dHMiLAogICAgICAgICAgICAgICAgImtpbmQiOiAiQ29uZmlnTWFwIiwKICAgICAgICAgICAgICAg
      ICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJkYXRhIjogc2VsZi5vdXRfbWFwWydST09L
      X0VYVEVSTkFMX0NFUEhfTU9OX0RBVEEnXSwKICAgICAgICAgICAgICAgICAgICAibWF4TW9uSWQi
      OiAiMCIsCiAgICAgICAgICAgICAgICAgICAgIm1hcHBpbmciOiAie30iCiAgICAgICAgICAgICAg
      ICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjog
      InJvb2stY2VwaC1tb24iLAogICAgICAgICAgICAgICAgImtpbmQiOiAiU2VjcmV0IiwKICAgICAg
      ICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJhZG1pbi1zZWNyZXQiOiAi
      YWRtaW4tc2VjcmV0IiwKICAgICAgICAgICAgICAgICAgICAiZnNpZCI6IHNlbGYub3V0X21hcFsn
      Uk9PS19FWFRFUk5BTF9GU0lEJ10sCiAgICAgICAgICAgICAgICAgICAgIm1vbi1zZWNyZXQiOiAi
      bW9uLXNlY3JldCIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAg
      IHsKICAgICAgICAgICAgICAgICJuYW1lIjogInJvb2stY2VwaC1vcGVyYXRvci1jcmVkcyIsCiAg
      ICAgICAgICAgICAgICAia2luZCI6ICJTZWNyZXQiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7
      CiAgICAgICAgICAgICAgICAgICAgInVzZXJJRCI6IHNlbGYub3V0X21hcFsnUk9PS19FWFRFUk5B
      TF9VU0VSTkFNRSddLAogICAgICAgICAgICAgICAgICAgICJ1c2VyS2V5Ijogc2VsZi5vdXRfbWFw
      WydST09LX0VYVEVSTkFMX1VTRVJfU0VDUkVUJ10KICAgICAgICAgICAgICAgIH0KICAgICAgICAg
      ICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1jc2ktcmJk
      LW5vZGUiLAogICAgICAgICAgICAgICAgImtpbmQiOiAiU2VjcmV0IiwKICAgICAgICAgICAgICAg
      ICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJ1c2VySUQiOiAnY3NpLXJiZC1ub2RlJywK
      ICAgICAgICAgICAgICAgICAgICAidXNlcktleSI6IHNlbGYub3V0X21hcFsnQ1NJX1JCRF9OT0RF
      X1NFQ1JFVF9TRUNSRVQnXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAg
      ICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJjZXBoLXJiZCIsCiAgICAgICAgICAgICAg
      ICAia2luZCI6ICJTdG9yYWdlQ2xhc3MiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAg
      ICAgICAgICAgICAgICAgInBvb2wiOiBzZWxmLm91dF9tYXBbJ1JCRF9QT09MX05BTUUnXQogICAg
      ICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAg
      ICAibmFtZSI6ICJtb25pdG9yaW5nLWVuZHBvaW50IiwKICAgICAgICAgICAgICAgICJraW5kIjog
      IkNlcGhDbHVzdGVyIiwKICAgICAgICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAg
      ICAgICJNb25pdG9yaW5nRW5kcG9pbnQiOiBzZWxmLm91dF9tYXBbJ01PTklUT1JJTkdfRU5EUE9J
      TlQnXSwKICAgICAgICAgICAgICAgICAgICAiTW9uaXRvcmluZ1BvcnQiOiBzZWxmLm91dF9tYXBb
      J01PTklUT1JJTkdfRU5EUE9JTlRfUE9SVCddCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAg
      IH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogInJndy1hZG1pbi1vcHMt
      dXNlciIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNyZXQiLAogICAgICAgICAgICAgICAg
      ImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImFjY2Vzc0tleSI6IHNlbGYub3V0X21hcFsn
      QUNDRVNTX0tFWSddLAogICAgICAgICAgICAgICAgICAgICJzZWNyZXRLZXkiOiBzZWxmLm91dF9t
      YXBbJ1NFQ1JFVF9LRVknXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAg
      XQoKICAgICAgICAjIGlmICdDU0lfUkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCcgZXhpc3RzLCB0aGVu
      IG9ubHkgYWRkICdyb29rLWNzaS1yYmQtcHJvdmlzaW9uZXInIFNlY3JldAogICAgICAgIGlmIHNl
      bGYub3V0X21hcFsnQ1NJX1JCRF9QUk9WSVNJT05FUl9TRUNSRVQnXToKICAgICAgICAgICAganNv
      bl9vdXQuYXBwZW5kKHsKICAgICAgICAgICAgICAgICJuYW1lIjogInJvb2stY3NpLXJiZC1wcm92
      aXNpb25lciIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNyZXQiLAogICAgICAgICAgICAg
      ICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgInVzZXJJRCI6ICdjc2ktcmJkLXByb3Zp
      c2lvbmVyJywKICAgICAgICAgICAgICAgICAgICAidXNlcktleSI6IHNlbGYub3V0X21hcFsnQ1NJ
      X1JCRF9QUk9WSVNJT05FUl9TRUNSRVQnXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAg
      fSkKICAgICAgICAjIGlmICdDU0lfQ0VQSEZTX1BST1ZJU0lPTkVSX1NFQ1JFVCcgZXhpc3RzLCB0
      aGVuIG9ubHkgYWRkICdyb29rLWNzaS1jZXBoZnMtcHJvdmlzaW9uZXInIFNlY3JldAogICAgICAg
      IGlmIHNlbGYub3V0X21hcFsnQ1NJX0NFUEhGU19QUk9WSVNJT05FUl9TRUNSRVQnXToKICAgICAg
      ICAgICAganNvbl9vdXQuYXBwZW5kKHsKICAgICAgICAgICAgICAgICJuYW1lIjogInJvb2stY3Np
      LWNlcGhmcy1wcm92aXNpb25lciIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNyZXQiLAog
      ICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImFkbWluSUQiOiAn
      Y3NpLWNlcGhmcy1wcm92aXNpb25lcicsCiAgICAgICAgICAgICAgICAgICAgImFkbWluS2V5Ijog
      c2VsZi5vdXRfbWFwWydDU0lfQ0VQSEZTX1BST1ZJU0lPTkVSX1NFQ1JFVCddCiAgICAgICAgICAg
      ICAgICB9LAogICAgICAgICAgICB9KQogICAgICAgICMgaWYgJ0NTSV9DRVBIRlNfTk9ERV9TRUNS
      RVQnIGV4aXN0cywgdGhlbiBvbmx5IGFkZCAncm9vay1jc2ktY2VwaGZzLW5vZGUnIFNlY3JldAog
      ICAgICAgIGlmIHNlbGYub3V0X21hcFsnQ1NJX0NFUEhGU19OT0RFX1NFQ1JFVCddOgogICAgICAg
      ICAgICBqc29uX291dC5hcHBlbmQoewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1jc2kt
      Y2VwaGZzLW5vZGUiLAogICAgICAgICAgICAgICAgImtpbmQiOiAiU2VjcmV0IiwKICAgICAgICAg
      ICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJhZG1pbklEIjogJ2NzaS1jZXBo
      ZnMtbm9kZScsCiAgICAgICAgICAgICAgICAgICAgImFkbWluS2V5Ijogc2VsZi5vdXRfbWFwWydD
      U0lfQ0VQSEZTX05PREVfU0VDUkVUJ10KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkK
      ICAgICAgICAjIGlmICdDRVBIRlNfRlNfTkFNRScgZXhpc3RzLCB0aGVuIG9ubHkgYWRkICdjZXBo
      ZnMnIFN0b3JhZ2VDbGFzcwogICAgICAgIGlmIHNlbGYub3V0X21hcFsnQ0VQSEZTX0ZTX05BTUUn
      XToKICAgICAgICAgICAganNvbl9vdXQuYXBwZW5kKHsKICAgICAgICAgICAgICAgICJuYW1lIjog
      ImNlcGhmcyIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTdG9yYWdlQ2xhc3MiLAogICAgICAg
      ICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImZzTmFtZSI6IHNlbGYub3V0
      X21hcFsnQ0VQSEZTX0ZTX05BTUUnXSwKICAgICAgICAgICAgICAgICAgICAicG9vbCI6IHNlbGYu
      b3V0X21hcFsnQ0VQSEZTX1BPT0xfTkFNRSddCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAg
      IH0pCiAgICAgICAgIyBpZiAnUkdXX0VORFBPSU5UJyBleGlzdHMsIHRoZW4gb25seSBhZGQgJ2Nl
      cGgtcmd3JyBTdG9yYWdlQ2xhc3MKICAgICAgICBpZiBzZWxmLm91dF9tYXBbJ1JHV19FTkRQT0lO
      VCddOgogICAgICAgICAgICBqc29uX291dC5hcHBlbmQoewogICAgICAgICAgICAgICAgIm5hbWUi
      OiAiY2VwaC1yZ3ciLAogICAgICAgICAgICAgICAgImtpbmQiOiAiU3RvcmFnZUNsYXNzIiwKICAg
      ICAgICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJlbmRwb2ludCI6IHNl
      bGYub3V0X21hcFsnUkdXX0VORFBPSU5UJ10sCiAgICAgICAgICAgICAgICAgICAgInBvb2xQcmVm
      aXgiOiBzZWxmLm91dF9tYXBbJ1JHV19QT09MX1BSRUZJWCddCiAgICAgICAgICAgICAgICB9CiAg
      ICAgICAgICAgIH0pCiAgICAgICAgcmV0dXJuIGpzb24uZHVtcHMoanNvbl9vdXQpK0xJTkVTRVAK
      CiAgICBkZWYgdXBncmFkZV91c2VyX3Blcm1pc3Npb25zKHNlbGYpOgogICAgICAgICMgY2hlY2sg
      d2hldGhlciB0aGUgZ2l2ZW4gdXNlciBleGlzdHMgb3Igbm90CiAgICAgICAgY21kX2pzb24gPSB7
      InByZWZpeCI6ICJhdXRoIGdldCIsICJlbnRpdHkiOiAie30iLmZvcm1hdCgKICAgICAgICAgICAg
      c2VsZi5ydW5fYXNfdXNlciksICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNv
      bl9vdXQsIGVycl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAg
      ICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6CiAgICAgICAgICAgIHJh
      aXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oIidhdXRoIGdldCB7fScgY29tbWFuZCBmYWls
      ZWQuXG4iLmZvcm1hdChzZWxmLnJ1bl9hc191c2VyKSArCiAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgIkVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3Zh
      bCAhPSAwIGVsc2Ugc2VsZi5FTVBUWV9PVVRQVVRfTElTVCkpCiAgICAgICAgal9maXJzdCA9IGpz
      b25fb3V0WzBdCiAgICAgICAgZXhpc3RpbmdfY2FwcyA9IGpfZmlyc3RbJ2NhcHMnXQogICAgICAg
      IG9zZF9jYXAgPSAib3NkIgogICAgICAgIGNhcF9rZXlzID0gWyJtb24iLCAibWdyIiwgIm9zZCJd
      CiAgICAgICAgZm9yIGVhY2hDYXAgaW4gY2FwX2tleXM6CiAgICAgICAgICAgIG1pbl9jYXBfdmFs
      dWVzID0gc2VsZi5NSU5fVVNFUl9DQVBfUEVSTUlTU0lPTlMuZ2V0KGVhY2hDYXAsICcnKQogICAg
      ICAgICAgICBjdXJfY2FwX3ZhbHVlcyA9IGV4aXN0aW5nX2NhcHMuZ2V0KGVhY2hDYXAsICcnKQog
      ICAgICAgICAgICAjIGRldGVjdCByZ3ctcG9vbC1wcmVmaXgKICAgICAgICAgICAgaWYgZWFjaENh
      cCA9PSBvc2RfY2FwOgogICAgICAgICAgICAgICAgIyBpZiBkaXJlY3RseSBwcm92aWRlZCB0aHJv
      dWdoICctLXJndy1wb29sLXByZWZpeCcgYXJndW1lbnQsIHVzZSBpdAogICAgICAgICAgICAgICAg
      aWYgc2VsZi5fYXJnX3BhcnNlci5yZ3dfcG9vbF9wcmVmaXg6CiAgICAgICAgICAgICAgICAgICAg
      bWluX2NhcF92YWx1ZXMgPSBtaW5fY2FwX3ZhbHVlcy5mb3JtYXQoCiAgICAgICAgICAgICAgICAg
      ICAgICAgIHNlbGYuX2FyZ19wYXJzZXIucmd3X3Bvb2xfcHJlZml4KQogICAgICAgICAgICAgICAg
      IyBvciBlbHNlIHRyeSB0byBkZXRlY3Qgb25lIGZyb20gdGhlIGV4aXN0aW5nL2N1cnJlbnQgb3Nk
      IGNhcCB2YWx1ZXMKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgcmMg
      PSByZS5jb21waWxlKHInIHBvb2w9KFteLl0rKVwucmd3XC5bXiBdKicpCiAgICAgICAgICAgICAg
      ICAgICAgIyAnZmluZGFsbCgpJyBtZXRob2Qgd2lsbCBnaXZlIGEgbGlzdCBvZiBwcmVmaXhlcwog
      ICAgICAgICAgICAgICAgICAgICMgYW5kICdzZXQnIHdpbGwgZWxpbWluYXRlIGFueSBkdXBsaWNh
      dGVzCiAgICAgICAgICAgICAgICAgICAgY3VyX3Jnd19wb29sX3ByZWZpeF9saXN0ID0gbGlzdCgK
      ICAgICAgICAgICAgICAgICAgICAgICAgc2V0KHJjLmZpbmRhbGwoY3VyX2NhcF92YWx1ZXMpKSkK
      ICAgICAgICAgICAgICAgICAgICBpZiBsZW4oY3VyX3Jnd19wb29sX3ByZWZpeF9saXN0KSAhPSAx
      OgogICAgICAgICAgICAgICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9u
      KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlVuYWJsZSB0byBkZXRlcm1pbmUgJ3Jndy1w
      b29sLXByZWZ4Jy4gUGxlYXNlIHByb3ZpZGUgb25lIHdpdGggJy0tcmd3LXBvb2wtcHJlZml4JyBm
      bGFnIikKICAgICAgICAgICAgICAgICAgICBtaW5fY2FwX3ZhbHVlcyA9IG1pbl9jYXBfdmFsdWVz
      LmZvcm1hdCgKICAgICAgICAgICAgICAgICAgICAgICAgY3VyX3Jnd19wb29sX3ByZWZpeF9saXN0
      WzBdKQogICAgICAgICAgICBjdXJfY2FwX3Blcm1fbGlzdCA9IFt4LnN0cmlwKCkKICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHggaW4gY3VyX2NhcF92YWx1ZXMuc3BsaXQoJywn
      KSBpZiB4LnN0cmlwKCldCiAgICAgICAgICAgIG1pbl9jYXBfcGVybV9saXN0ID0gW3guc3RyaXAo
      KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgeCBpbiBtaW5fY2FwX3ZhbHVl
      cy5zcGxpdCgnLCcpIGlmIHguc3RyaXAoKV0KICAgICAgICAgICAgbWluX2NhcF9wZXJtX2xpc3Qu
      ZXh0ZW5kKGN1cl9jYXBfcGVybV9saXN0KQogICAgICAgICAgICAjIGVsaW1pbmF0ZSBkdXBsaWNh
      dGVzIHdpdGhvdXQgdXNpbmcgJ3NldCcKICAgICAgICAgICAgIyBzZXQgcmUtb3JkZXJzIGl0ZW1z
      IGluIHRoZSBsaXN0IGFuZCB3ZSBoYXZlIHRvIGtlZXAgdGhlIG9yZGVyCiAgICAgICAgICAgIG5l
      d19jYXBfcGVybV9saXN0ID0gW10KICAgICAgICAgICAgW25ld19jYXBfcGVybV9saXN0LmFwcGVu
      ZCgKICAgICAgICAgICAgICAgIHgpIGZvciB4IGluIG1pbl9jYXBfcGVybV9saXN0IGlmIHggbm90
      IGluIG5ld19jYXBfcGVybV9saXN0XQogICAgICAgICAgICBleGlzdGluZ19jYXBzW2VhY2hDYXBd
      ID0gIiwgIi5qb2luKG5ld19jYXBfcGVybV9saXN0KQogICAgICAgIGNtZF9qc29uID0geyJwcmVm
      aXgiOiAiYXV0aCBjYXBzIiwKICAgICAgICAgICAgICAgICAgICAiZW50aXR5Ijogc2VsZi5ydW5f
      YXNfdXNlciwKICAgICAgICAgICAgICAgICAgICAiY2FwcyI6IFsibW9uIiwgZXhpc3RpbmdfY2Fw
      c1sibW9uIl0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1nciIsIGV4aXN0aW5nX2Nh
      cHNbIm1nciJdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvc2QiLCBleGlzdGluZ19j
      YXBzWyJvc2QiXV0sCiAgICAgICAgICAgICAgICAgICAgImZvcm1hdCI6ICJqc29uIn0KICAgICAg
      ICByZXRfdmFsLCBqc29uX291dCwgZXJyX21zZyA9IHNlbGYuX2NvbW1vbl9jbWRfanNvbl9nZW4o
      Y21kX2pzb24pCiAgICAgICAgaWYgcmV0X3ZhbCAhPSAwOgogICAgICAgICAgICByYWlzZSBFeGVj
      dXRpb25GYWlsdXJlRXhjZXB0aW9uKCInYXV0aCBjYXBzIHt9JyBjb21tYW5kIGZhaWxlZC5cbiIu
      Zm9ybWF0KHNlbGYucnVuX2FzX3VzZXIpICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAiRXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZykpCiAgICAgICAgcHJpbnQo
      IlVwZGF0ZWQgdXNlciwge30sIHN1Y2Nlc3NmdWxseS4iLmZvcm1hdChzZWxmLnJ1bl9hc191c2Vy
      KSkKCiAgICBkZWYgbWFpbihzZWxmKToKICAgICAgICBnZW5lcmF0ZWRfb3V0cHV0ID0gJycKICAg
      ICAgICBpZiBzZWxmLl9hcmdfcGFyc2VyLnVwZ3JhZGU6CiAgICAgICAgICAgIHNlbGYudXBncmFk
      ZV91c2VyX3Blcm1pc3Npb25zKCkKICAgICAgICBlbGlmIHNlbGYuX2FyZ19wYXJzZXIuZm9ybWF0
      ID09ICdqc29uJzoKICAgICAgICAgICAgZ2VuZXJhdGVkX291dHB1dCA9IHNlbGYuZ2VuX2pzb25f
      b3V0KCkKICAgICAgICBlbGlmIHNlbGYuX2FyZ19wYXJzZXIuZm9ybWF0ID09ICdiYXNoJzoKICAg
      ICAgICAgICAgZ2VuZXJhdGVkX291dHB1dCA9IHNlbGYuZ2VuX3NoZWxsX291dCgpCiAgICAgICAg
      ZWxzZToKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigiVW5zdXBw
      b3J0ZWQgZm9ybWF0OiB7fSIuZm9ybWF0KAogICAgICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNl
      ci5mb3JtYXQpKQogICAgICAgIHByaW50KCd7fScuZm9ybWF0KGdlbmVyYXRlZF9vdXRwdXQpKQog
      ICAgICAgIGlmIHNlbGYub3V0cHV0X2ZpbGUgYW5kIGdlbmVyYXRlZF9vdXRwdXQ6CiAgICAgICAg
      ICAgIGZPdXQgPSBvcGVuKHNlbGYub3V0cHV0X2ZpbGUsICd3JykKICAgICAgICAgICAgZk91dC53
      cml0ZShnZW5lcmF0ZWRfb3V0cHV0KQogICAgICAgICAgICBmT3V0LmNsb3NlKCkKCgojIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIE1BSU4gIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAg
      cmpPYmogPSBSYWRvc0pTT04oKQogICAgdHJ5OgogICAgICAgIHJqT2JqLm1haW4oKQogICAgZXhj
      ZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgIHByaW50KCJFeGVj
      dXRpb24gRmFpbGVkOiB7fSIuZm9ybWF0KGVycikpCiAgICAgICAgcmFpc2UgZXJyCiAgICBleGNl
      cHQgS2V5RXJyb3IgYXMga0VycjoKICAgICAgICBwcmludCgiS2V5RXJyb3I6ICVzIiwga0VycikK
      ICAgIGV4Y2VwdCBPU0Vycm9yIGFzIG9zRXJyOgogICAgICAgIHByaW50KCJFcnJvciB3aGlsZSB0
      cnlpbmcgdG8gb3V0cHV0IHRoZSBkYXRhOiB7fSIuZm9ybWF0KG9zRXJyKSkKICAgIGZpbmFsbHk6
      CiAgICAgICAgcmpPYmouc2h1dGRvd24oKQoKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIwojIyMjIyMjIyMjIyMjIyMjIyMjIyMgVEVTVCAjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjCiMgaW5vcmRlciB0byB0ZXN0IHRoZSBwYWNrYWdlLAojIGNkIDxzY3JpcHRfZGlyZWN0b3J5
      PgojIHB5dGhvbiAtbSB1bml0dGVzdCAtLXZlcmJvc2UgPHNjcmlwdF9uYW1lX3dpdGhvdXRfZG90
      X3B5PgpjbGFzcyBUZXN0UmFkb3NKU09OKHVuaXR0ZXN0LlRlc3RDYXNlKToKICAgIGRlZiBzZXRV
      cChzZWxmKToKICAgICAgICBwcmludCgiXG5JIGFtIGluIHNldHVwIikKICAgICAgICBzZWxmLnJq
      T2JqID0gUmFkb3NKU09OKFsnLS1yYmQtZGF0YS1wb29sLW5hbWU9YWJjJywKICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAnLS1yZ3ctZW5kcG9pbnQ9MTAuMTAuMjEyLjEyMjo5MDAwJywg
      Jy0tZm9ybWF0PWpzb24nXSkKICAgICAgICAjIGZvciB0ZXN0aW5nLCB3ZSBhcmUgdXNpbmcgJ0R1
      bW15UmFkb3MnIG9iamVjdAogICAgICAgIHNlbGYucmpPYmouY2x1c3RlciA9IER1bW15UmFkb3Mu
      UmFkb3MoKQoKICAgIGRlZiB0ZWFyRG93bihzZWxmKToKICAgICAgICBwcmludCgiXG5JIGFtIHRl
      YXJpbmcgZG93biB0aGUgc2V0dXBcbiIpCiAgICAgICAgc2VsZi5yak9iai5zaHV0ZG93bigpCgog
      ICAgZGVmIHRlc3RfbWV0aG9kX21haW5fb3V0cHV0KHNlbGYpOgogICAgICAgIHByaW50KCJKU09O
      IE91dHB1dCIpCiAgICAgICAgc2VsZi5yak9iai5fYXJnX3BhcnNlci5mb3JtYXQgPSAianNvbiIK
      ICAgICAgICBzZWxmLnJqT2JqLm1haW4oKQogICAgICAgIHByaW50KCJcblxuU2hlbGwgT3V0cHV0
      IikKICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmZvcm1hdCA9ICJiYXNoIgogICAgICAg
      IHNlbGYucmpPYmoubWFpbigpCiAgICAgICAgcHJpbnQoIlxuXG5Ob24gY29tcGF0aWJsZSBvdXRw
      dXQgKC0tYWJjZCkiKQogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5fYXJnX3Bh
      cnNlci5mb3JtYXQgPSAnYWJjZCcKICAgICAgICAgICAgc2VsZi5yak9iai5tYWluKCkKICAgICAg
      ICAgICAgc2VsZi5mYWlsKCJGdW5jdGlvbiBzaG91bGQgaGF2ZSB0aHJvd24gYW4gRXhjZXB0aW9u
      IikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAg
      ICAgICAgIHByaW50KCJFeGNlcHRpb24gdGhyb3duIHN1Y2Nlc3NmdWxseToge30iLmZvcm1hdChl
      cnIpKQoKICAgIGRlZiB0ZXN0X21ldGhvZF9jcmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZTUHJv
      dmlzaW9uZXIoc2VsZik6CiAgICAgICAgY3NpS2V5cmluZyA9IHNlbGYucmpPYmouY3JlYXRlX2Nl
      cGhDU0lLZXlyaW5nX2NlcGhGU1Byb3Zpc2lvbmVyKCkKICAgICAgICBwcmludCgie30iLmZvcm1h
      dChjc2lLZXlyaW5nKSkKCiAgICBkZWYgdGVzdF9ub25femVyb19yZXR1cm5fYW5kX2Vycm9yKHNl
      bGYpOgogICAgICAgIHNlbGYucmpPYmouY2x1c3Rlci5yZXR1cm5fdmFsID0gMQogICAgICAgIHNl
      bGYucmpPYmouY2x1c3Rlci5lcnJfbWVzc2FnZSA9ICJEdW1teSBFcnJvciIKICAgICAgICB0cnk6
      CiAgICAgICAgICAgIHNlbGYucmpPYmouY3JlYXRlX2NoZWNrZXJLZXkoKQogICAgICAgICAgICBz
      ZWxmLmZhaWwoIkZhaWxlZCB0byByYWlzZSBhbiBleGNlcHRpb24sICdFeGVjdXRpb25GYWlsdXJl
      RXhjZXB0aW9uJyIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMg
      ZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJvci5cbkVycm9y
      OiB7fSIuZm9ybWF0KGVycikpCgogICAgZGVmIHRlc3RfbXVsdGlfZmlsZXN5c3RlbV9zY2VuYXJp
      byhzZWxmKToKICAgICAgICBjbWRfa2V5ID0gc2VsZi5yak9iai5jbHVzdGVyLmNtZF9uYW1lc1sn
      ZnMgbHMnXQogICAgICAgIGNtZF9vdXQgPSBzZWxmLnJqT2JqLmNsdXN0ZXIuY21kX291dHB1dF9t
      YXBbY21kX2tleV0KICAgICAgICBjbWRfanNvbl9vdXQgPSBqc29uLmxvYWRzKGNtZF9vdXQpCiAg
      ICAgICAgc2Vjb25kX2ZzX2RldGFpbHMgPSBkaWN0KGNtZF9qc29uX291dFswXSkKICAgICAgICBz
      ZWNvbmRfZnNfZGV0YWlsc1snbmFtZSddICs9ICctMicKICAgICAgICBjbWRfanNvbl9vdXQuYXBw
      ZW5kKHNlY29uZF9mc19kZXRhaWxzKQogICAgICAgIHNlbGYucmpPYmouY2x1c3Rlci5jbWRfb3V0
      cHV0X21hcFtjbWRfa2V5XSA9IGpzb24uZHVtcHMoY21kX2pzb25fb3V0KQogICAgICAgICMgbXVs
      dGlwbGUgZmlsZXN5c3RlbSBwcmVzZW50LAogICAgICAgICMgYnV0IG5vIHNwZWNpZmljICctLWNl
      cGhmcy1maWxlc3lzdGVtLW5hbWUnIGFyZ3VtZW50IHByb3ZpZGVkCiAgICAgICAgdHJ5OgogICAg
      ICAgICAgICBzZWxmLnJqT2JqLmdldF9jZXBoZnNfZGF0YV9wb29sX2RldGFpbHMoKQogICAgICAg
      ICAgICBwcmludCgiQXMgd2UgYXJlIHJldHVybmluZyBzaWxlbnRseSwgbm8gZXJyb3IgdGhyb3du
      IGFzIGV4cGVjdGVkIikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBh
      cyBlcnI6CiAgICAgICAgICAgIHNlbGYuZmFpbCgKICAgICAgICAgICAgICAgICJTdXBwb3NlZCB0
      byBnZXQgcmV0dXJuZWQgc2lsZW50bHksIGJ1dCBpbnN0ZWFkIGVycm9yIHRocm93bjoge30iLmZv
      cm1hdChlcnIpKQogICAgICAgICMgcGFzcyBhbiBleGlzdGluZyBmaWxlc3lzdGVtIG5hbWUKICAg
      ICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVz
      eXN0ZW1fbmFtZSA9IHNlY29uZF9mc19kZXRhaWxzWyduYW1lJ10KICAgICAgICAgICAgc2VsZi5y
      ak9iai5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICBleGNlcHQgRXhlY3V0
      aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHNlbGYuZmFpbCgiU2hvdWxk
      IG5vdCBoYXZlIHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgcGFzcyBh
      IG5vbi1leGlzdGluZyBmaWxlc3lzdGVtIG5hbWUKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNl
      bGYucmpPYmouX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZSArPSAiLW5vbi1leGlz
      dGluZy1mcy1uYW1lIgogICAgICAgICAgICBzZWxmLnJqT2JqLmdldF9jZXBoZnNfZGF0YV9wb29s
      X2RldGFpbHMoKQogICAgICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0
      ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlv
      biBhcyBlcnI6CiAgICAgICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7
      fSIuZm9ybWF0KGVycikpCiAgICAgICAgIyBlbXB0eSBmaWxlLXN5c3RlbSBhcnJheQogICAgICAg
      IHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5jbHVzdGVyLmNtZF9vdXRwdXRfbWFwW2NtZF9r
      ZXldID0ganNvbi5kdW1wcyhbXSkKICAgICAgICAgICAgc2VsZi5yak9iai5nZXRfY2VwaGZzX2Rh
      dGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2Fz
      IGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVF
      eGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBl
      cnJvcjoge30iLmZvcm1hdChlcnIpKQoKICAgIGRlZiB0ZXN0X211bHRpX2RhdGFfcG9vbF9zY2Vu
      YXJpbyhzZWxmKToKICAgICAgICBjbWRfa2V5ID0gc2VsZi5yak9iai5jbHVzdGVyLmNtZF9uYW1l
      c1snZnMgbHMnXQogICAgICAgIGNtZF9vdXQgPSBzZWxmLnJqT2JqLmNsdXN0ZXIuY21kX291dHB1
      dF9tYXBbY21kX2tleV0KICAgICAgICBjbWRfanNvbl9vdXQgPSBqc29uLmxvYWRzKGNtZF9vdXQp
      CiAgICAgICAgZmlyc3RfZnNfZGV0YWlscyA9IGNtZF9qc29uX291dFswXQogICAgICAgIG5ld19k
      YXRhX3Bvb2xfbmFtZSA9ICdteWZzLWRhdGExJwogICAgICAgIGZpcnN0X2ZzX2RldGFpbHNbJ2Rh
      dGFfcG9vbHMnXS5hcHBlbmQobmV3X2RhdGFfcG9vbF9uYW1lKQogICAgICAgIHByaW50KCJNb2Rp
      ZmllZCBKU09OIENtZCBPdXQ6IHt9Ii5mb3JtYXQoY21kX2pzb25fb3V0KSkKICAgICAgICBzZWxm
      LnJqT2JqLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSA9IG5ld19kYXRhX3Bvb2xf
      bmFtZQogICAgICAgIHNlbGYucmpPYmouY2x1c3Rlci5jbWRfb3V0cHV0X21hcFtjbWRfa2V5XSA9
      IGpzb24uZHVtcHMoY21kX2pzb25fb3V0KQogICAgICAgIHNlbGYucmpPYmouZ2V0X2NlcGhmc19k
      YXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgIyB1c2UgYSBub24tZXhpc3RpbmcgZGF0YS1wb29s
      LW5hbWUKICAgICAgICBiYWRfZGF0YV9wb29sX25hbWUgPSAnbXlmcy1kYXRhMycKICAgICAgICBz
      ZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSA9IGJhZF9kYXRhX3Bv
      b2xfbmFtZQogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5nZXRfY2VwaGZzX2Rh
      dGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2Fz
      IGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVF
      eGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBl
      cnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgZW1wdHkgZGF0YS1wb29sIHNjZW5hcmlv
      CiAgICAgICAgZmlyc3RfZnNfZGV0YWlsc1snZGF0YV9wb29scyddID0gW10KICAgICAgICBzZWxm
      LnJqT2JqLmNsdXN0ZXIuY21kX291dHB1dF9tYXBbY21kX2tleV0gPSBqc29uLmR1bXBzKGNtZF9q
      c29uX291dCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouZ2V0X2NlcGhmc19k
      YXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiQW4gRXhjZXB0aW9uIHdh
      cyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAgIGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJl
      RXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIlN1Y2Nlc3NmdWxseSB0aHJvd24g
      ZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKCiAgICBkZWYgdGVzdF92YWxpZF9yZ3dfZW5kcG9pbnQo
      c2VsZik6CiAgICAgICAgc2VsZi5yak9iai5faW52YWxpZF9lbmRwb2ludCgiMTAuMTAuMjEyLjEz
      Mzo4MDAwIikKICAgICAgICAjIGludmFsaWQgcG9ydAogICAgICAgIHRyeToKICAgICAgICAgICAg
      c2VsZi5yak9iai5faW52YWxpZF9lbmRwb2ludCgiMTAuMTAuMjEyLjEzMzoyMzgwMDAiKQogICAg
      ICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3du
      IikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAg
      ICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikp
      CiAgICAgICAgIyBvdXQgb2YgcmFuZ2UgSVAKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYu
      cmpPYmouX2ludmFsaWRfZW5kcG9pbnQoIjEwLjEwMzMuMjEyLjEzMzo4MDAwIikKICAgICAgICAg
      ICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAg
      ICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAg
      ICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAg
      ICAgICMgbWFsIGZvcm1hdHRlZCBJUAogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9i
      ai5faW52YWxpZF9lbmRwb2ludCgiMTAuMTAzLi4yMTIuMTMzOjgwMDAiKQogICAgICAgICAgICBz
      ZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAg
      ICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHBy
      aW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikpCiAgICAgICAg
      dHJ5OgogICAgICAgICAgICBzZWxmLnJqT2JqLl9pbnZhbGlkX2VuZHBvaW50KCIxMC4xMDMuMjEy
      LjEzMzo6ODAwMCIpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiQW4gRXhjZXB0aW9uIHdhcyBleHBl
      Y3RlZCB0byBiZSB0aHJvd24iKQogICAgICAgIGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0
      aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIlN1Y2Nlc3NmdWxseSB0aHJvd24gZXJyb3I6
      IHt9Ii5mb3JtYXQoZXJyKSkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2lu
      dmFsaWRfZW5kcG9pbnQoIjEwLjEwLjEwMy4yMTIuMTMzOjgwMDAiKQogICAgICAgICAgICBzZWxm
      LmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBl
      eGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHByaW50
      KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikpCgogICAgZGVmIGFk
      ZF9ub25fZGVmYXVsdF9wb29sX3ByZWZpeF9jbWQoc2VsZiwgbm9uX2RlZmF1bHRfcG9vbF9wcmVm
      aXgpOgogICAgICAgIGpzb25fY21kID0ganNvbi5sb2FkcygKICAgICAgICAgICAgc2VsZi5yak9i
      ai5jbHVzdGVyLmNtZF9uYW1lc1snY2Fwc19jaGFuZ2VfZGVmYXVsdF9wb29sX3ByZWZpeCddKQog
      ICAgICAgIGN1cl9vc2RfY2FwcyA9IGpzb25fY21kWydjYXBzJ11banNvbl9jbWRbJ2NhcHMnXS5p
      bmRleCgnb3NkJykgKyAxXQogICAgICAgIG5ld19vc2RfY2FwcyA9IGN1cl9vc2RfY2Fwcy5yZXBs
      YWNlKAogICAgICAgICAgICAnZGVmYXVsdC4nLCAne30uJy5mb3JtYXQobm9uX2RlZmF1bHRfcG9v
      bF9wcmVmaXgpKQogICAgICAgIGFsbF9vc2RfY2FwcyA9ICJ7fSwge30iLmZvcm1hdChuZXdfb3Nk
      X2NhcHMsIGN1cl9vc2RfY2FwcykKICAgICAgICBjYXBzX2xpc3QgPSBbeC5zdHJpcCgpIGZvciB4
      IGluIGFsbF9vc2RfY2Fwcy5zcGxpdCgnLCcpIGlmIHguc3RyaXAoKV0KICAgICAgICBuZXdfY2Fw
      c19saXN0ID0gW10KICAgICAgICBbbmV3X2NhcHNfbGlzdC5hcHBlbmQoeCkgZm9yIHggaW4gY2Fw
      c19saXN0IGlmIHggbm90IGluIG5ld19jYXBzX2xpc3RdCiAgICAgICAgYWxsX29zZF9jYXBzID0g
      IiwgIi5qb2luKG5ld19jYXBzX2xpc3QpCiAgICAgICAganNvbl9jbWRbJ2NhcHMnXVtqc29uX2Nt
      ZFsnY2FwcyddLmluZGV4KCdvc2QnKSArIDFdID0gYWxsX29zZF9jYXBzCiAgICAgICAgc2VsZi5y
      ak9iai5jbHVzdGVyLmNtZF9uYW1lc1snY2Fwc19jaGFuZ2Vfbm9uX2RlZmF1bHRfcG9vbF9wcmVm
      aXgnXSA9IGpzb24uZHVtcHMoCiAgICAgICAgICAgIGpzb25fY21kKQogICAgICAgIHNlbGYucmpP
      YmouY2x1c3Rlci5jbWRfb3V0cHV0X21hcFsKICAgICAgICAgICAgc2VsZi5yak9iai5jbHVzdGVy
      LmNtZF9uYW1lc1snY2Fwc19jaGFuZ2Vfbm9uX2RlZmF1bHRfcG9vbF9wcmVmaXgnXV0gPSAnW3t9
      XScKCiAgICBkZWYgdGVzdF91cGdyYWRlX3VzZXJfcGVybWlzc2lvbnMoc2VsZik6CiAgICAgICAg
      c2VsZi5yak9iaiA9IFJhZG9zSlNPTigKICAgICAgICAgICAgWyctLXVwZ3JhZGUnLCAnLS1ydW4t
      YXMtdXNlcj1jbGllbnQuaGVhbHRoY2hlY2tlciddKQogICAgICAgICMgZm9yIHRlc3RpbmcsIHdl
      IGFyZSB1c2luZyAnRHVtbXlSYWRvcycgb2JqZWN0CiAgICAgICAgc2VsZi5yak9iai5jbHVzdGVy
      ID0gRHVtbXlSYWRvcy5SYWRvcygpCiAgICAgICAgc2VsZi5yak9iai5tYWluKCkKICAgICAgICBz
      ZWxmLnJqT2JqID0gUmFkb3NKU09OKAogICAgICAgICAgICBbJy0tdXBncmFkZScsICctLXJ1bi1h
      cy11c2VyPWNsaWVudC5oZWFsdGhjaGVja2VyJywgJy0tcmd3LXBvb2wtcHJlZml4PW5vbkRlZmF1
      bHQnXSkKICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIgPSBEdW1teVJhZG9zLlJhZG9zKCkKICAg
      ICAgICBzZWxmLmFkZF9ub25fZGVmYXVsdF9wb29sX3ByZWZpeF9jbWQoJ25vbkRlZmF1bHQnKQog
      ICAgICAgIHNlbGYucmpPYmoubWFpbigpCgogICAgZGVmIHRlc3RfbW9uaXRvcmluZ19lbmRwb2lu
      dF92YWxpZGF0aW9uKHNlbGYpOgogICAgICAgIHNlbGYucmpPYmogPSBSYWRvc0pTT04oWyctLXJi
      ZC1kYXRhLXBvb2wtbmFtZT1hYmMnLCAnLS1mb3JtYXQ9anNvbiddKQogICAgICAgIHNlbGYucmpP
      YmouY2x1c3RlciA9IER1bW15UmFkb3MuUmFkb3MoKQoKICAgICAgICB2YWxpZF9pcF9wb3J0cyA9
      IFsoIjEwLjIyLjMxLjEzMSIsICIzNTM0IiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgKCIx
      MC4xNzcuMy44MSIsICIiKSwgKCIiLCAiIiksICgiIiwgIjkwOTIiKV0KICAgICAgICBmb3IgZWFj
      aF9pcF9wb3J0X3BhaXIgaW4gdmFsaWRfaXBfcG9ydHM6CiAgICAgICAgICAgICMgcmVzZXQgbW9u
      aXRvcmluZyBpcCBhbmQgcG9ydAogICAgICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLm1v
      bml0b3JpbmdfZW5kcG9pbnQgPSAnJwogICAgICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2Vy
      Lm1vbml0b3JpbmdfZW5kcG9pbnRfcG9ydCA9ICcnCiAgICAgICAgICAgIG5ld19tb25faXAsIG5l
      d19tb25fcG9ydCA9IGVhY2hfaXBfcG9ydF9wYWlyCiAgICAgICAgICAgIGNoZWNrX2lwX3ZhbCA9
      IHNlbGYucmpPYmouY2x1c3Rlci5kdW1teV9ob3N0X2lwX21hcC5nZXQoCiAgICAgICAgICAgICAg
      ICBuZXdfbW9uX2lwLCBuZXdfbW9uX2lwKQogICAgICAgICAgICBjaGVja19wb3J0X3ZhbCA9IFJh
      ZG9zSlNPTi5ERUZBVUxUX01PTklUT1JJTkdfRU5EUE9JTlRfUE9SVAogICAgICAgICAgICBpZiBu
      ZXdfbW9uX2lwOgogICAgICAgICAgICAgICAgc2VsZi5yak9iai5fYXJnX3BhcnNlci5tb25pdG9y
      aW5nX2VuZHBvaW50ID0gbmV3X21vbl9pcAogICAgICAgICAgICBpZiBuZXdfbW9uX3BvcnQ6CiAg
      ICAgICAgICAgICAgICBjaGVja19wb3J0X3ZhbCA9IG5ld19tb25fcG9ydAogICAgICAgICAgICAg
      ICAgc2VsZi5yak9iai5fYXJnX3BhcnNlci5tb25pdG9yaW5nX2VuZHBvaW50X3BvcnQgPSBuZXdf
      bW9uX3BvcnQKICAgICAgICAgICAgIyBmb3IgdGVzdGluZywgd2UgYXJlIHVzaW5nICdEdW1teVJh
      ZG9zJyBvYmplY3QKICAgICAgICAgICAgbW9uX2lwcywgbW9uX3BvcnQgPSBzZWxmLnJqT2JqLmdl
      dF9hY3RpdmVfYW5kX3N0YW5kYnlfbWdycygpCiAgICAgICAgICAgIG1vbl9pcCA9IG1vbl9pcHMu
      c3BsaXQoIiwiKVswXQogICAgICAgICAgICBpZiBjaGVja19pcF92YWwgYW5kIGNoZWNrX2lwX3Zh
      bCAhPSBtb25faXA6CiAgICAgICAgICAgICAgICBzZWxmLmZhaWwoIkV4cGVjdGVkIElQOiB7fSwg
      UmV0dXJuZWQgSVA6IHt9Ii5mb3JtYXQoCiAgICAgICAgICAgICAgICAgICAgY2hlY2tfaXBfdmFs
      LCBtb25faXApKQogICAgICAgICAgICBpZiBjaGVja19wb3J0X3ZhbCBhbmQgY2hlY2tfcG9ydF92
      YWwgIT0gbW9uX3BvcnQ6CiAgICAgICAgICAgICAgICBzZWxmLmZhaWwoIkV4cGVjdGVkIFBvcnQ6
      ICd7fScsIFJldHVybmVkIFBvcnQ6ICd7fSciLmZvcm1hdCgKICAgICAgICAgICAgICAgICAgICBj
      aGVja19wb3J0X3ZhbCwgbW9uX3BvcnQpKQogICAgICAgICAgICBwcmludCgiTW9uSVA6IHt9LCBN
      b25Qb3J0OiB7fSIuZm9ybWF0KG1vbl9pcCwgbW9uX3BvcnQpKQoKICAgICAgICBpbnZhbGlkX2lw
      X3BvcnRzID0gWygiMTAuMjIuMzEuMTMxLjQzIiwgIjUzMzQiKSwgKCIiLCAiOTE5NDMiKSwKICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICgiMTAuMTc3LjMuODEiLCAiOTAzMjAiKSwgKCIiLCAi
      NzM0MjIiKSwgKCIxMC4yMzIuMTIuOCIsICI5MDkyMiIpXQogICAgICAgIGZvciBlYWNoX2lwX3Bv
      cnRfcGFpciBpbiBpbnZhbGlkX2lwX3BvcnRzOgogICAgICAgICAgICAjIHJlc2V0IHRoZSBjb21t
      YW5kLWxpbmUgbW9uaXRvcmluZyBhcmdzCiAgICAgICAgICAgIHNlbGYucmpPYmouX2FyZ19wYXJz
      ZXIubW9uaXRvcmluZ19lbmRwb2ludCA9ICcnCiAgICAgICAgICAgIHNlbGYucmpPYmouX2FyZ19w
      YXJzZXIubW9uaXRvcmluZ19lbmRwb2ludF9wb3J0ID0gJycKICAgICAgICAgICAgbmV3X21vbl9p
      cCwgbmV3X21vbl9wb3J0ID0gZWFjaF9pcF9wb3J0X3BhaXIKICAgICAgICAgICAgaWYgbmV3X21v
      bl9pcDoKICAgICAgICAgICAgICAgIHNlbGYucmpPYmouX2FyZ19wYXJzZXIubW9uaXRvcmluZ19l
      bmRwb2ludCA9IG5ld19tb25faXAKICAgICAgICAgICAgaWYgbmV3X21vbl9wb3J0OgogICAgICAg
      ICAgICAgICAgc2VsZi5yak9iai5fYXJnX3BhcnNlci5tb25pdG9yaW5nX2VuZHBvaW50X3BvcnQg
      PSBuZXdfbW9uX3BvcnQKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgbW9uX2lwLCBt
      b25fcG9ydCA9IHNlbGYucmpPYmouZ2V0X2FjdGl2ZV9hbmRfc3RhbmRieV9tZ3JzKCkKICAgICAg
      ICAgICAgICAgIHByaW50KCJbV3JvbmddIE1vbklQOiB7fSwgTW9uUG9ydDoge30iLmZvcm1hdCht
      b25faXAsIG1vbl9wb3J0KSkKICAgICAgICAgICAgICAgIHNlbGYuZmFpbCgiQW4gZXhjZXB0aW9u
      IHdhcyBleHBlY3RlZCIpCiAgICAgICAgICAgIGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0
      aW9uIGFzIGVycjoKICAgICAgICAgICAgICAgIHByaW50KCJFeGNlcHRpb24gdGhyb3duIHN1Y2Nl
      c3NmdWxseToge30iLmZvcm1hdChlcnIpKQo=
    external.features.ocs.openshift.io/supported-platforms: '["BareMetal", "None", "VSphere", "OpenStack", "oVirt"]'
    external.features.ocs.openshift.io/validation: '{"secrets":["rook-ceph-operator-creds", "rook-csi-rbd-node", "rook-csi-rbd-provisioner"], "configMaps": ["rook-ceph-mon-endpoints", "rook-ceph-mon"], "storageClasses": ["ceph-rbd"], "cephClusters": ["monitoring-endpoint"]}'
    features.ocs.openshift.io/enabled: '["kms", "arbiter", "flexible-scaling", "multus", "thick-provision", "pool-management", "namespace-store"]'
    olm.skipRange: '>=0.0.1 <4.9.0'
    operatorframework.io/initialization-resource: "\n    {\n        \"apiVersion\": \"ocs.openshift.io/v1\",\n        \"kind\": \"StorageCluster\",\n        \"metadata\": {\n            \"name\": \"example-storagecluster\",\n            \"namespace\": \"openshift-storage\"\n        },\n        \"spec\": {\n            \"manageNodes\": false,\n            \"monPVCTemplate\": {\n                \"spec\": {\n                    \"accessModes\": [\n                        \"ReadWriteOnce\"\n                    ],\n                    \"resources\": {\n                        \"requests\": {\n                            \"storage\": \"10Gi\"\n                        }\n                    },\n                    \"storageClassName\": \"gp2\"\n                }\n            },\n            \"storageDeviceSets\": [\n                {\n                    \"count\": 3,\n                    \"dataPVCTemplate\": {\n                        \"spec\": {\n                            \"accessModes\": [\n                                \"ReadWriteOnce\"\n                            ],\n                            \"resources\": {\n                                \"requests\": {\n                                    \"storage\": \"1Ti\"\n                                }\n                            },\n                            \"storageClassName\": \"gp2\",\n                            \"volumeMode\": \"Block\"\n                        }\n                    },\n                    \"name\": \"example-deviceset\",\n                    \"placement\": {},\n                    \"portable\": true,\n                    \"resources\": {}\n                }\n            ]\n        }\n    }\n\t"
    operatorframework.io/suggested-namespace: openshift-storage
    operators.operatorframework.io/builder: operator-sdk-v1.2.0
    operators.operatorframework.io/internal-objects: '["ocsinitializations.ocs.openshift.io","cephclusters.ceph.rook.io","cephobjectstores.ceph.rook.io","cephobjectstoreusers.ceph.rook.io","cephnfses.ceph.rook.io","cephclients.ceph.rook.io","cephfilesystems.ceph.rook.io","cephfilesystemmirrors.ceph.rook.io","cephrbdmirrors.ceph.rook.io","cephobjectrealms.ceph.rook.io","cephobjectzonegroups.ceph.rook.io","cephobjectzones.ceph.rook.io","volumereplicationclasses.replication.storage.openshift.io","volumereplications.replication.storage.openshift.io","noobaas.noobaa.io","objectbucketclaims.objectbucket.io","objectbuckets.objectbucket.io"]'
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    repository: https://github.com/openshift/ocs-operator
    support: Red Hat
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.ppc64le: supported
    operatorframework.io/arch.s390x: supported
  name: ocs-operator.v4.9.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: OCS Initialization represents the initial data to be created when the OCS operator is installed.
      displayName: OCS Initialization
      kind: OCSInitialization
      name: ocsinitializations.ocs.openshift.io
      version: v1
    - description: Storage Cluster represents a OpenShift Container Storage Cluster including Ceph Cluster, NooBaa and all the storage and compute resources required.
      displayName: Storage Cluster
      kind: StorageCluster
      name: storageclusters.ocs.openshift.io
      resources:
      - kind: CephCluster
        name: cephclusters.ceph.rook.io
        version: v1
      - kind: NooBaa
        name: noobaas.noobaa.io
        version: v1alpha1
      version: v1
    - description: Represents a Ceph cluster.
      displayName: Ceph Cluster
      kind: CephCluster
      name: cephclusters.ceph.rook.io
      version: v1
    - description: Represents a Ceph Block Pool.
      displayName: Block Pools
      kind: CephBlockPool
      name: cephblockpools.ceph.rook.io
      version: v1
    - description: Represents a Ceph Object Store.
      displayName: Ceph Object Store
      kind: CephObjectStore
      name: cephobjectstores.ceph.rook.io
      specDescriptors:
      - description: Coding Chunks
        displayName: Coding Chunks
        path: dataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: dataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: dataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: dataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Annotations
        displayName: Annotations
        path: gateway.annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:annotations
      - description: Instances
        displayName: Instances
        path: gateway.instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Resources
        displayName: Resources
        path: gateway.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: placement
        displayName: placement
        path: gateway.placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:placement
      - description: securePort
        displayName: securePort
        path: gateway.securePort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:securePort
      - description: sslCertificateRef
        displayName: sslCertificateRef
        path: gateway.sslCertificateRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:sslCertificateRef
      - description: Type
        displayName: Type
        path: gateway.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Coding Chunks
        displayName: Coding Chunks
        path: metadataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: metadataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: metadataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: metadataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      version: v1
    - description: Represents a Ceph Object Store User.
      displayName: Ceph Object Store User
      kind: CephObjectStoreUser
      name: cephobjectstoreusers.ceph.rook.io
      version: v1
    - description: Represents a cluster of Ceph NFS ganesha gateways.
      displayName: Ceph NFS
      kind: CephNFS
      name: cephnfses.ceph.rook.io
      version: v1
    - description: Represents a Ceph User.
      displayName: Ceph Client
      kind: CephClient
      name: cephclients.ceph.rook.io
      version: v1
    - description: Represents a Ceph Filesystem.
      displayName: Ceph Filesystem
      kind: CephFilesystem
      name: cephfilesystems.ceph.rook.io
      version: v1
    - description: Represents a Ceph Filesystem Mirror.
      displayName: Ceph Filesystem Mirror
      kind: CephFilesystemMirror
      name: cephfilesystemmirrors.ceph.rook.io
      version: v1
    - description: Represents a Ceph RBD Mirror.
      displayName: Ceph RBD Mirror
      kind: CephRBDMirror
      name: cephrbdmirrors.ceph.rook.io
      version: v1
    - description: Represents a Ceph Object Store Realm.
      displayName: Ceph Object Store Realm
      kind: CephObjectRealm
      name: cephobjectrealms.ceph.rook.io
      version: v1
    - description: Represents a Ceph Object Store Zone Group.
      displayName: Ceph Object Store Zone Group
      kind: CephObjectZoneGroup
      name: cephobjectzonegroups.ceph.rook.io
      version: v1
    - description: Represents a Ceph Object Store Zone.
      displayName: Ceph Object Store Zone
      kind: CephObjectZone
      name: cephobjectzones.ceph.rook.io
      version: v1
    - kind: VolumeReplicationClass
      name: volumereplicationclasses.replication.storage.openshift.io
      version: v1alpha1
    - kind: VolumeReplication
      name: volumereplications.replication.storage.openshift.io
      version: v1alpha1
    - description: A NooBaa system - Create this to start
      displayName: NooBaa
      kind: NooBaa
      name: noobaas.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: DBImage (optional) overrides the default image for the db container.
        displayName: DB Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image (optional) overrides the default image for the server container.
        displayName: Image
        path: dbImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: CoreResources (optional) overrides the default resource requirements for the server container.
        displayName: Core Resources
        path: coreResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBResources (optional) overrides the default resource requirements for the db container.
        displayName: DB Resources
        path: dbResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: 'DBVolumeResources (optional) overrides the default PVC resource requirements for the database volume. For the time being this field is immutable and can only be set on system creation. This is because volume size updates are only supported for increasing the size, and only if the storage class specifies `allowVolumeExpansion: true`, +immutable.'
        displayName: Image
        path: dbVolumeResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBStorageClass (optional) overrides the default cluster StorageClass for the database volume. For the time being this field is immutable and can only be set on system creation. This affects where the system stores its database which contains system config, buckets, objects meta-data and mapping file parts to storage locations. +immutable.
        displayName: DB StorageClass
        path: dbStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: PVPoolDefaultStorageClass (optional) overrides the default cluster StorageClass for the pv-pool volumes. This affects where the system stores data chunks (encrypted). Updates to this field will only affect new pv-pools, but updates to existing pools are not supported by the operator.
        displayName: PV Pool DefaultStorageClass
        path: pvPoolDefaultStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: ImagePullSecret (optional) sets a pull secret for the system image.
        displayName: Image Pull Secret
        path: imagePullSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      version: v1alpha1
    - description: Storage target spec such as aws-s3, s3-compatible, ibm-cos, PV's and more. Used in BucketClass to construct data placement policies.
      displayName: Backing Store
      kind: BackingStore
      name: backingstores.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: Region is the AWS region.
        displayName: Region
        path: awsS3.region
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: awsS3.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SSLDisabled allows to disable SSL and use plain http.
        displayName: SSL Disabled
        path: awsS3.sslDisabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: awsS3.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |2-
           Secret refers to a secret that provides the credentials. The secret should define AccountName and AccountKey as provided
          by Azure Blob.
        displayName: Secret
        path: azureBlob.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBlobContainer is the name of the target Azure Blob container.
        displayName: Target Blob Container
        path: azureBlob.targetBlobContainer
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |-
          Secret refers to a secret that provides the credentials. The secret should define GoogleServiceAccountPrivateKeyJson containing
          the entire json string as provided by Google.
        displayName: Secret
        path: googleCloudStorage.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: googleCloudStorage.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: NumVolumes is the number of volumes to allocate.
        displayName: Num Volumes
        path: pvPool.numVolumes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: VolumeResources represents the minimum resources each volume should have.
        displayName: Resources
        path: pvPool.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: StorageClass is the name of the storage class to use for the PV's.
        displayName: Storage Class
        path: pvPool.storageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port.'
        displayName: End Point
        path: s3Compatible.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: s3Compatible.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use when signing requests.
        displayName: Signature Version
        path: s3Compatible.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: s3Compatible.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the IBM COS endpoint: http(s)://host:port.'
        displayName: End Point
        path: IBMCos.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: IBMCos.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use when signing requests.
        displayName: Signature Version
        path: IBMCos.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target IBM COS bucket.
        displayName: Target Bucket
        path: IBMCos.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Storage target spec such as aws-s3, s3-compatible, ibm-cos and more. Used in BucketClass to construct namespace policies.
      displayName: Namespace Store
      kind: NamespaceStore
      name: namespacestores.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: Region is the AWS region.
        displayName: Region
        path: awsS3.region
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: awsS3.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SSLDisabled allows to disable SSL and use plain http.
        displayName: SSL Disabled
        path: awsS3.sslDisabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: awsS3.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |2-
           Secret refers to a secret that provides the credentials. The secret should define AccountName and AccountKey as provided
          by Azure Blob.
        displayName: Secret
        path: azureBlob.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBlobContainer is the name of the target Azure Blob container.
        displayName: Target Blob Container
        path: azureBlob.targetBlobContainer
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port.'
        displayName: End Point
        path: s3Compatible.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: s3Compatible.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use when signing requests.
        displayName: Signature Version
        path: s3Compatible.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: s3Compatible.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the IBM COS endpoint: http(s)://host:port.'
        displayName: End Point
        path: IBMCos.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: IBMCos.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use when signing requests.
        displayName: Signature Version
        path: IBMCos.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target IBM COS bucket.
        displayName: Target Bucket
        path: IBMCos.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Storage policy spec  tiering, mirroring, spreading, namespace policy. Combines BackingStores Or NamespaceStores. Referenced by ObjectBucketClaims.
      displayName: Bucket Class
      kind: BucketClass
      name: bucketclasses.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: BackingStores is an unordered list of backing store names. The meaning of the list depends on the placement.
        displayName: Backing Stores
        path: placementPolicy.tiers[0].backingStores[0]
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Placement specifies the type of placement for the tier If empty it should have a single backing store.
        displayName: Placement
        path: placementPolicy.tiers[0].placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Namespace Policy type specifies the type of the namespace policy configuration.
        displayName: Namespace Policy
        path: namespacePolicy.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:namespacePolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resource specifies the namespace store configured by the bucket class to be read and write targets.
        displayName: Resource
        path: namespacePolicy.single.resource
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:namespacePolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Read Resources specifies the namespace stores configured by the bucket class to be read targets.
        displayName: Read Resources
        path: namespacePolicy.Multi.readResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:namespacePolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Write Resource specifies the namespace store configured by the bucket class to be write target.
        displayName: Write Resource
        path: namespacePolicy.Multi.writeResource
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:namespacePolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Hub Resource specifies the target namespace store configured by the bucket class to be read and write targets.
        displayName: Hub Resource
        path: namespacePolicy.Cache.hubResource
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:namespacePolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Claim a bucket just like claiming a PV. Automate you app bucket provisioning by creating OBC with your app deployment. A secret and configmap (name=claim) will be created with access details for the app pods.
      displayName: Object Bucket Claim
      kind: ObjectBucketClaim
      name: objectbucketclaims.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
    - description: Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning information.
      displayName: Object Bucket
      kind: ObjectBucket
      name: objectbuckets.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
  description: |2

    **Red Hat OpenShift Container Storage** deploys three operators.

    ### OpenShift Container Storage operator

    The OpenShift Container Storage operator is the primary operator for OpenShift Container Storage. It serves to facilitate the other operators in OpenShift Container Storage by performing administrative tasks outside their scope as well as watching and configuring their CustomResources.

    ### Rook

    [Rook][1] deploys and manages Ceph on OpenShift, which provides block and file storage.

    ### NooBaa operator

    The NooBaa operator deploys and manages the [NooBaa][2] Multi-Cloud Gateway on OpenShift, which provides object storage.

    # Core Capabilities

    * **Self-managing service:** No matter which supported storage technologies you choose, OpenShift Container Storage ensures that resources can be deployed and managed automatically.

    * **Hyper-scale or hyper-converged:** With OpenShift Container Storage you can either build dedicated storage clusters or hyper-converged clusters where your apps run alongside storage.

    * **File, Block, and Object provided by OpenShift Container Storage:** OpenShift Container Storage integrates Ceph with multiple storage presentations including object storage (compatible with S3), block storage, and POSIX-compliant shared file system.

    * **Your data, protected:** OpenShift Container Storage efficiently distributes and replicates your data across your cluster to minimize the risk of data loss. With snapshots, cloning, and versioning, no more losing sleep over your data.

    * **Elastic storage in your datacenter:** Scale is now possible in your datacenter. Get started with a few terabytes, and easily scale up.

    * **Simplified data management:** Easily create hybrid and multi-cloud data storage for your workloads, using a single namespace.

    [1]: https://rook.io
    [2]: https://noobaa.io
  displayName: OpenShift Container Storage
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephblockpools
          - cephclusters
          - cephfilesystems
          - cephobjectstores
          - cephobjectstoreusers
          verbs:
          - '*'
        - apiGroups:
          - config.openshift.io
          resources:
          - infrastructures
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - console.openshift.io
          resources:
          - consolequickstarts
          verbs:
          - '*'
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          - endpoints
          - events
          - nodes
          - persistentvolumeclaims
          - pods
          - secrets
          - services
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - prometheusrules
          - servicemonitors
          verbs:
          - create
          - get
          - list
          - update
          - watch
        - apiGroups:
          - noobaa.io
          resources:
          - noobaas
          verbs:
          - '*'
        - apiGroups:
          - ocs.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - quota.openshift.io
          resources:
          - clusterresourcequotas
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotclasses
          - volumesnapshots
          verbs:
          - '*'
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - '*'
          - get
        - apiGroups:
          - template.openshift.io
          resources:
          - templates
          verbs:
          - '*'
        serviceAccountName: ocs-operator
      - rules:
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - get
          - watch
          - list
        serviceAccountName: rook-ceph-admission-controller-role
      - rules:
        - apiGroups:
          - ""
          - apps
          - extensions
          resources:
          - secrets
          - pods
          - pods/log
          - services
          - configmaps
          - deployments
          - daemonsets
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - nodes
          - nodes/proxy
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          - persistentvolumes
          - persistentvolumeclaims
          - endpoints
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          - cronjobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - policy
          - apps
          - extensions
          resources:
          - poddisruptionbudgets
          - deployments
          - replicasets
          verbs:
          - '*'
        - apiGroups:
          - healthchecking.openshift.io
          resources:
          - machinedisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - machine.openshift.io
          resources:
          - machines
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - csidrivers
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - k8s.cni.cncf.io
          resources:
          - network-attachment-definitions
          verbs:
          - get
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - nodes
          - nodes/proxy
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - list
          - get
          - watch
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          verbs:
          - '*'
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
        serviceAccountName: rook-ceph-osd
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: rook-csi-cephfs-plugin-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - delete
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents/status
          verbs:
          - update
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - list
          - watch
          - delete
          - get
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots/status
          verbs:
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments/status
          verbs:
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        serviceAccountName: rook-csi-cephfs-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: rook-csi-rbd-plugin-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments/status
          verbs:
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - delete
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents/status
          verbs:
          - update
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - list
          - watch
          - delete
          - get
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots/status
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - replication.storage.openshift.io
          resources:
          - volumereplications
          - volumereplicationclasses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - replication.storage.openshift.io
          resources:
          - volumereplications/finalizers
          verbs:
          - update
        - apiGroups:
          - replication.storage.openshift.io
          resources:
          - volumereplications/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - replication.storage.openshift.io
          resources:
          - volumereplicationclasses/status
          verbs:
          - get
        serviceAccountName: rook-csi-rbd-provisioner-sa
      - rules:
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
          - create
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: noobaa
      - rules:
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: ocs-metrics-exporter
      deployments:
      - name: ocs-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: ocs-operator
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                name: ocs-operator
            spec:
              containers:
              - args:
                - --enable-leader-election
                - --health-probe-bind-address=:8081
                command:
                - ocs-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: ROOK_CEPH_IMAGE
                  value: rook/ceph:v1.6.5-2.gb78358e
                - name: CEPH_IMAGE
                  value: ceph/daemon-base:latest-pacific
                - name: NOOBAA_CORE_IMAGE
                  value: noobaa/noobaa-core:master-20210609
                - name: NOOBAA_DB_IMAGE
                  value: centos/postgresql-12-centos7
                image: quay.io/ocs-dev/ocs-operator:latest
                imagePullPolicy: Always
                name: ocs-operator
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources: {}
              serviceAccountName: ocs-operator
              terminationGracePeriodSeconds: 10
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      - name: rook-ceph-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: rook-ceph-operator
          strategy: {}
          template:
            metadata:
              labels:
                app: rook-ceph-operator
            spec:
              containers:
              - args:
                - ceph
                - operator
                env:
                - name: ROOK_CURRENT_NAMESPACE_ONLY
                  value: "true"
                - name: ROOK_ALLOW_MULTIPLE_FILESYSTEMS
                  value: "false"
                - name: ROOK_LOG_LEVEL
                  value: INFO
                - name: ROOK_CEPH_STATUS_CHECK_INTERVAL
                  value: 60s
                - name: ROOK_MON_HEALTHCHECK_INTERVAL
                  value: 45s
                - name: ROOK_MON_OUT_TIMEOUT
                  value: 600s
                - name: ROOK_DISCOVER_DEVICES_INTERVAL
                  value: 60m
                - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED
                  value: "true"
                - name: ROOK_ENABLE_SELINUX_RELABELING
                  value: "true"
                - name: ROOK_ENABLE_FSGROUP
                  value: "true"
                - name: ROOK_ENABLE_FLEX_DRIVER
                  value: "false"
                - name: ROOK_ENABLE_DISCOVERY_DAEMON
                  value: "false"
                - name: ROOK_ENABLE_MACHINE_DISRUPTION_BUDGET
                  value: "false"
                - name: ROOK_DISABLE_DEVICE_HOTPLUG
                  value: "true"
                - name: ROOK_CSI_ALLOW_UNSUPPORTED_VERSION
                  value: "true"
                - name: CSI_VOLUME_REPLICATION_IMAGE
                  value: quay.io/csiaddons/volumereplication-operator:v0.1.0
                - name: CSI_PROVISIONER_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: CSI_PLUGIN_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: ROOK_OBC_WATCH_OPERATOR_NAMESPACE
                  value: "true"
                image: rook/ceph:v1.6.5-2.gb78358e
                name: rook-ceph-operator
                resources: {}
                volumeMounts:
                - mountPath: /var/lib/rook
                  name: rook-config
                - mountPath: /etc/ceph
                  name: default-config-dir
              serviceAccountName: rook-ceph-system
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
              volumes:
              - emptyDir: {}
                name: rook-config
              - emptyDir: {}
                name: default-config-dir
      - name: noobaa-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              noobaa-operator: deployment
          strategy: {}
          template:
            metadata:
              labels:
                app: noobaa
                noobaa-operator: deployment
            spec:
              containers:
              - env:
                - name: OPERATOR_NAME
                  value: noobaa-operator
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: NOOBAA_CORE_IMAGE
                  value: noobaa/noobaa-core:master-20210609
                - name: NOOBAA_DB_IMAGE
                  value: centos/postgresql-12-centos7
                image: noobaa/noobaa-operator:master-20210609
                name: noobaa-operator
                resources:
                  limits:
                    cpu: 250m
                    memory: 512Mi
              serviceAccountName: noobaa
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      - name: ocs-metrics-exporter
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/component: ocs-metrics-exporter
              app.kubernetes.io/name: ocs-metrics-exporter
          strategy: {}
          template:
            metadata:
              labels:
                app.kubernetes.io/component: ocs-metrics-exporter
                app.kubernetes.io/name: ocs-metrics-exporter
                app.kubernetes.io/version: 0.0.1
            spec:
              containers:
              - args:
                - --namespaces=openshift-storage
                command:
                - /usr/local/bin/metrics-exporter
                image: quay.io/ocs-dev/ocs-operator:latest
                name: ocs-metrics-exporter
                ports:
                - containerPort: 8080
                - containerPort: 8081
                resources: {}
                securityContext:
                  runAsNonRoot: true
              serviceAccountName: ocs-metrics-exporter
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          - services
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - apps
          - extensions
          resources:
          - daemonsets
          - statefulsets
          - deployments
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - delete
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          - cephclusters/finalizers
          verbs:
          - get
          - list
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-osd
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - pods/log
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - create
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-cephfs-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-rbd-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-cmd-reporter
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          - prometheusrules
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/finalizers
          verbs:
          - update
        - apiGroups:
          - apps
          resourceNames:
          - noobaa-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - cloudcredential.openshift.io
          resources:
          - credentialsrequests
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstores
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstoreusers
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - get
          - create
          - update
          - patch
          - list
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - create
          - update
          - patch
          - list
          - watch
          - delete
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - noobaa
          resources:
          - securitycontextconstraints
          verbs:
          - use
        serviceAccountName: noobaa
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - noobaa-endpoint
          resources:
          - securitycontextconstraints
          verbs:
          - use
        serviceAccountName: noobaa-endpoint
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - storage
  - rook
  - ceph
  - noobaa
  - block storage
  - shared filesystem
  - object storage
  links:
  - name: Source Code
    url: https://github.com/openshift/ocs-operator
  maintainers:
  - email: ocs-support@redhat.com
    name: Red Hat Support
  maturity: alpha
  minKubeVersion: 1.16.0
  provider:
    name: Red Hat
  relatedImages:
  - image: rook/ceph:v1.6.5-2.gb78358e
    name: rook-container
  - image: ceph/daemon-base:latest-pacific
    name: ceph-container
  - image: quay.io/csiaddons/volumereplication-operator:v0.1.0
    name: volume-replication-operator
  - image: noobaa/noobaa-operator:master-20210609
    name: noobaa-operator
  - image: noobaa/noobaa-core:master-20210609
    name: noobaa-core
  - image: centos/postgresql-12-centos7
    name: noobaa-db
  - image: quay.io/ocs-dev/ocs-must-gather:latest
    name: ocs-must-gather
  version: 4.9.0
